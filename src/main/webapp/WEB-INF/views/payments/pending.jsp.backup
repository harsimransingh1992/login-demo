<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
    <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
        <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
            <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
                <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>

                    <!DOCTYPE html>
                    <html>

                    <head>
                        <meta charset="UTF-8">
                        <meta name="viewport" content="width=device-width, initial-scale=1.0">
                        <meta name="_csrf" content="${_csrf.token}" />
                        <meta name="_csrf_header" content="${_csrf.headerName}" />
                        <title>Patient Payment Ledger - PeriDesk</title>
                        <link rel="stylesheet" href="${pageContext.request.contextPath}/css/style.css">
                        <script src="${pageContext.request.contextPath}/js/common.js"></script>
                        <link
                            href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
                            rel="stylesheet">
                        <link rel="stylesheet"
                            href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
                        <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

                        <!-- Include common menu styles -->
                        <jsp:include page="/WEB-INF/views/common/menuStyles.jsp" />

                        <style>
                            body {
                                font-family: 'Poppins', sans-serif;
                                margin: 0;
                                padding: 0;
                                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                                min-height: 100vh;
                            }

                            .welcome-container {
                                display: flex;
                                min-height: 100vh;
                            }

                            .main-content {
                                flex: 1;
                                padding: 30px;
                                background: #f8f9fa;
                            }

                            .payments-header {
                                background: white;
                                border-radius: 15px;
                                padding: 30px;
                                margin-bottom: 30px;
                                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                            }

                            .payments-title {
                                font-size: 2.2rem;
                                font-weight: 700;
                                color: #2c3e50;
                                margin: 0 0 25px 0;
                                display: flex;
                                align-items: center;
                                gap: 15px;
                            }

                            .search-section {
                                background: #f8f9fa;
                                border-radius: 12px;
                                padding: 25px;
                                margin-bottom: 30px;
                            }

                            .search-form {
                                display: flex;
                                gap: 15px;
                                align-items: center;
                                max-width: 600px;
                            }

                            .search-label {
                                display: block;
                                margin-bottom: 8px;
                                font-weight: 600;
                                color: #2c3e50;
                            }

                            .form-group {
                                flex: 3;
                                margin: 0;
                            }

                            .form-group label {
                                display: none;
                            }

                            .search-input {
                                width: 100%;
                                padding: 12px 16px;
                                border: 2px solid #e9ecef;
                                border-radius: 8px;
                                font-size: 1rem;
                                transition: all 0.3s ease;
                                height: 48px;
                                box-sizing: border-box;
                                margin: 0;
                            }

                            .search-input:focus {
                                outline: none;
                                border-color: #3498db;
                                box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
                            }

                            .btn {
                                padding: 12px 24px;
                                border: none;
                                border-radius: 8px;
                                font-size: 1rem;
                                font-weight: 600;
                                cursor: pointer;
                                transition: all 0.3s ease;
                                text-decoration: none;
                                display: inline-flex;
                                align-items: center;
                                gap: 8px;
                            }

                            .btn-primary {
                                background: linear-gradient(135deg, #3498db, #2980b9);
                                color: white;
                            }

                            .btn-primary:hover {
                                background: linear-gradient(135deg, #2980b9, #1c6ea4);
                                transform: translateY(-2px);
                                box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
                            }

                            .search-btn {
                                flex: 1;
                                padding: 12px 16px;
                                font-size: 0.9rem;
                                height: 48px;
                                box-sizing: border-box;
                                margin: 0;
                            }

                            .patient-info {
                                background: white;
                                border-radius: 15px;
                                padding: 25px;
                                margin-bottom: 30px;
                                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                                display: none;
                            }

                            .patient-info.show {
                                display: block;
                            }

                            .patient-header {
                                display: flex;
                                justify-content: space-between;
                                align-items: center;
                                margin-bottom: 20px;
                                padding-bottom: 15px;
                                border-bottom: 2px solid #f1f3f4;
                            }

                            .patient-name {
                                font-size: 1.5rem;
                                font-weight: 700;
                                color: #2c3e50;
                            }

                            .patient-meta {
                                display: flex;
                                gap: 20px;
                                color: #7f8c8d;
                                font-size: 0.95rem;
                            }

                            .patient-summary {
                                margin-top: 20px;
                                padding-top: 20px;
                                border-top: 2px solid #f1f3f4;
                            }

                            .summary-cards {
                                display: grid;
                                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                                gap: 15px;
                            }

                            .summary-card {
                                background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
                                border-radius: 12px;
                                padding: 20px;
                                display: flex;
                                align-items: center;
                                gap: 15px;
                                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
                                border: 1px solid #e9ecef;
                                transition: all 0.3s ease;
                            }

                            .summary-card:hover {
                                transform: translateY(-2px);
                                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.12);
                            }

                            .summary-card.total-examinations .summary-icon {
                                background: linear-gradient(135deg, #3498db, #2980b9);
                            }

                            .summary-card.total-amount .summary-icon {
                                background: linear-gradient(135deg, #9b59b6, #8e44ad);
                            }

                            .summary-card.paid-amount .summary-icon {
                                background: linear-gradient(135deg, #2ecc71, #27ae60);
                            }

                            .summary-card.pending-amount-summary .summary-icon {
                                background: linear-gradient(135deg, #f39c12, #e67e22);
                            }

                            .summary-icon {
                                width: 50px;
                                height: 50px;
                                border-radius: 12px;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                color: white;
                                font-size: 1.2rem;
                                flex-shrink: 0;
                            }

                            .summary-content {
                                flex: 1;
                            }

                            .summary-value {
                                font-size: 1.4rem;
                                font-weight: 700;
                                color: #2c3e50;
                                margin-bottom: 4px;
                            }

                            .summary-label {
                                font-size: 0.85rem;
                                color: #7f8c8d;
                                font-weight: 500;
                            }

                            .examinations-section {
                                background: white;
                                border-radius: 15px;
                                padding: 25px;
                                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                            }

                            .section-title {
                                font-size: 1.3rem;
                                font-weight: 600;
                                color: #2c3e50;
                                margin-bottom: 20px;
                                display: flex;
                                align-items: center;
                                gap: 10px;
                            }

                            .examinations-grid {
                                display: grid;
                                grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
                                gap: 20px;
                            }

                            .examination-card {
                                border: 2px solid #e9ecef;
                                border-radius: 12px;
                                padding: 15px;
                                transition: all 0.3s ease;
                                margin-bottom: 10px;
                            }

                            .examination-card:hover {
                                border-color: #3498db;
                                box-shadow: 0 4px 12px rgba(52, 152, 219, 0.1);
                            }

                            .examination-header {
                                display: flex;
                                justify-content: space-between;
                                align-items: center;
                                margin-bottom: 10px;
                            }

                            .examination-title {
                                font-weight: 600;
                                color: #2c3e50;
                                font-size: 1rem;
                            }

                            .payment-status {
                                padding: 4px 12px;
                                border-radius: 20px;
                                font-size: 0.8rem;
                                font-weight: 600;
                            }

                            .status-pending {
                                background: #fff3cd;
                                color: #856404;
                            }

                            .status-partial {
                                background: #d1ecf1;
                                color: #0c5460;
                            }

                            .status-completed {
                                background: #d4edda;
                                color: #155724;
                            }

                            .status-no_charge {
                                background: #e2e3e5;
                                color: #383d41;
                            }

                            .text-success {
                                color: #28a745 !important;
                            }

                            .text-danger {
                                color: #dc3545 !important;
                            }

                            .text-warning {
                                color: #ffc107 !important;
                            }

                            .examination-details {
                                margin-bottom: 15px;
                            }

                            .detail-row {
                                display: flex;
                                justify-content: space-between;
                                align-items: center;
                                margin-bottom: 8px;
                                flex-wrap: wrap;
                                gap: 15px;
                            }

                            .detail-item {
                                display: flex;
                                align-items: center;
                                gap: 8px;
                                font-size: 0.9rem;
                            }

                            .detail-label {
                                color: #7f8c8d;
                                font-weight: 500;
                            }

                            .detail-value {
                                font-weight: 600;
                                color: #2c3e50;
                            }

                            .payment-actions {
                                display: flex;
                                gap: 8px;
                                justify-content: flex-end;
                            }

                            .btn-success {
                                background: linear-gradient(135deg, #2ecc71, #27ae60);
                                color: white;
                            }

                            .btn-success:hover {
                                background: linear-gradient(135deg, #27ae60, #229954);
                                transform: translateY(-2px);
                                box-shadow: 0 4px 12px rgba(46, 204, 113, 0.3);
                            }

                            .btn-secondary {
                                background: #6c757d;
                                color: white;
                            }

                            .btn-secondary:hover {
                                background: #5a6268;
                            }

                            .btn-info {
                                background: linear-gradient(135deg, #17a2b8, #138496);
                                color: white;
                            }

                            .btn-info:hover {
                                background: linear-gradient(135deg, #138496, #117a8b);
                                transform: translateY(-2px);
                                box-shadow: 0 4px 12px rgba(23, 162, 184, 0.3);
                            }

                            .no-records {
                                text-align: center;
                                padding: 60px 20px;
                                color: #7f8c8d;
                            }

                            .no-records i {
                                font-size: 3rem;
                                margin-bottom: 20px;
                                color: #bdc3c7;
                            }

                            .payment-form {
                                position: fixed;
                                top: 50%;
                                left: 50%;
                                transform: translate(-50%, -50%);
                                background: white;
                                border-radius: 15px;
                                padding: 30px;
                                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
                                z-index: 1000;
                                display: none;
                                max-width: 500px;
                                width: 90%;
                            }

                            .payment-form.show {
                                display: block;
                            }

                            .payment-summary {
                                background: #f8f9fa;
                                border-radius: 8px;
                                padding: 20px;
                                margin-bottom: 20px;
                            }

                            .summary-row {
                                display: flex;
                                justify-content: space-between;
                                margin-bottom: 8px;
                            }

                            .summary-label {
                                font-weight: 500;
                                color: #7f8c8d;
                            }

                            .summary-value {
                                font-weight: 600;
                                color: #2c3e50;
                            }

                            .payment-form-row {
                                display: flex;
                                flex-direction: column;
                                gap: 15px;
                                margin-bottom: 20px;
                            }

                            .payment-mode-select {
                                padding: 12px;
                                border: 2px solid #e9ecef;
                                border-radius: 8px;
                                font-size: 1rem;
                            }

                            .payment-amount-input {
                                padding: 12px;
                                border: 2px solid #e9ecef;
                                border-radius: 8px;
                                font-size: 1rem;
                                transition: all 0.3s ease;
                            }

                            .payment-amount-input.error {
                                border-color: #e74c3c;
                                background-color: #fdf2f2;
                                box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.1);
                            }

                            .payment-amount-input.valid {
                                border-color: #27ae60;
                                background-color: #f0f9f0;
                                box-shadow: 0 0 0 3px rgba(39, 174, 96, 0.1);
                            }

                            .amount-error {
                                color: #e74c3c;
                                font-size: 0.85rem;
                                margin-top: 5px;
                                display: none;
                                font-weight: 500;
                            }

                            .amount-error.show {
                                display: block;
                            }

                            .payment-notes {
                                padding: 12px;
                                border: 2px solid #e9ecef;
                                border-radius: 8px;
                                font-size: 1rem;
                                resize: vertical;
                            }

                            .payment-form-actions {
                                display: flex;
                                gap: 10px;
                                justify-content: flex-end;
                            }

                            .btn-cancel {
                                background: #6c757d;
                                color: white;
                            }

                            .overlay {
                                position: fixed;
                                top: 0;
                                left: 0;
                                width: 100%;
                                height: 100%;
                                background: rgba(0, 0, 0, 0.5);
                                z-index: 999;
                                display: none;
                            }

                            .overlay.show {
                                display: block;
                            }

                            .payment-history-modal {
                                position: fixed;
                                top: 50%;
                                left: 50%;
                                transform: translate(-50%, -50%);
                                background: white;
                                border-radius: 20px;
                                padding: 0;
                                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
                                z-index: 1001;
                                display: none;
                                max-width: 900px;
                                width: 95%;
                                max-height: 85vh;
                                overflow-y: auto;
                                border: 1px solid #e9ecef;
                            }

                            .payment-history-modal.show {
                                display: block;
                                animation: modalSlideIn 0.3s ease-out;
                            }

                            @keyframes modalSlideIn {
                                from {
                                    opacity: 0;
                                    transform: translate(-50%, -60%);
                                }

                                to {
                                    opacity: 1;
                                    transform: translate(-50%, -50%);
                                }
                            }

                            .payment-history-header {
                                display: flex;
                                justify-content: space-between;
                                align-items: flex-start;
                                padding: 30px 30px 20px 30px;
                                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                                color: white;
                                border-radius: 20px 20px 0 0;
                            }

                            .header-content {
                                flex: 1;
                            }

                            .payment-history-title {
                                font-size: 1.8rem;
                                font-weight: 700;
                                margin: 0 0 8px 0;
                                display: flex;
                                align-items: center;
                                gap: 12px;
                            }

                            .payment-history-subtitle {
                                font-size: 0.95rem;
                                opacity: 0.9;
                                margin: 0;
                                font-weight: 400;
                            }

                            .payment-history-close {
                                background: rgba(255, 255, 255, 0.2);
                                border: none;
                                font-size: 1.2rem;
                                color: white;
                                cursor: pointer;
                                padding: 10px;
                                border-radius: 50%;
                                transition: all 0.3s ease;
                                width: 40px;
                                height: 40px;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                            }

                            .payment-history-close:hover {
                                background: rgba(255, 255, 255, 0.3);
                                transform: scale(1.1);
                            }

                            .examination-summary {
                                padding: 30px;
                                background: #f8f9fa;
                            }

                            .summary-header {
                                margin-bottom: 25px;
                            }

                            .summary-header h3 {
                                font-size: 1.3rem;
                                font-weight: 600;
                                color: #2c3e50;
                                margin: 0;
                                display: flex;
                                align-items: center;
                                gap: 10px;
                            }

                            .examination-summary-grid {
                                display: grid;
                                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                                gap: 20px;
                                margin-bottom: 30px;
                            }

                            .summary-card {
                                background: white;
                                border-radius: 12px;
                                padding: 20px;
                                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
                                border: 1px solid #e9ecef;
                                transition: all 0.3s ease;
                                display: flex;
                                align-items: center;
                                gap: 15px;
                            }

                            .summary-card:hover {
                                transform: translateY(-2px);
                                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.12);
                            }

                            .summary-icon {
                                width: 50px;
                                height: 50px;
                                border-radius: 12px;
                                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                color: white;
                                font-size: 1.2rem;
                                flex-shrink: 0;
                            }

                            .summary-content {
                                flex: 1;
                            }

                            .summary-label {
                                display: block;
                                font-size: 0.85rem;
                                color: #7f8c8d;
                                font-weight: 500;
                                margin-bottom: 4px;
                            }

                            .summary-value {
                                display: block;
                                font-size: 1.1rem;
                                font-weight: 600;
                                color: #2c3e50;
                            }

                            .payment-overview {
                                background: white;
                                border-radius: 15px;
                                padding: 25px;
                                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
                                border: 1px solid #e9ecef;
                            }

                            .overview-header {
                                margin-bottom: 20px;
                            }

                            .overview-header h3 {
                                font-size: 1.2rem;
                                font-weight: 600;
                                color: #2c3e50;
                                margin: 0;
                                display: flex;
                                align-items: center;
                                gap: 10px;
                            }

                            .overview-cards {
                                display: grid;
                                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                                gap: 15px;
                                margin-bottom: 25px;
                            }

                            .overview-card {
                                background: #f8f9fa;
                                border-radius: 10px;
                                padding: 20px;
                                display: flex;
                                align-items: center;
                                gap: 15px;
                                border-left: 4px solid;
                            }

                            .overview-card.total {
                                border-left-color: #3498db;
                            }

                            .overview-card.paid {
                                border-left-color: #2ecc71;
                            }

                            .overview-card.remaining {
                                border-left-color: #f39c12;
                            }

                            .overview-icon {
                                width: 40px;
                                height: 40px;
                                border-radius: 10px;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                color: white;
                                font-size: 1rem;
                            }

                            .overview-card.total .overview-icon {
                                background: #3498db;
                            }

                            .overview-card.paid .overview-icon {
                                background: #2ecc71;
                            }

                            .overview-card.remaining .overview-icon {
                                background: #f39c12;
                            }

                            .overview-content {
                                flex: 1;
                            }

                            .overview-label {
                                display: block;
                                font-size: 0.85rem;
                                color: #7f8c8d;
                                font-weight: 500;
                                margin-bottom: 4px;
                            }

                            .overview-value {
                                display: block;
                                font-size: 1.3rem;
                                font-weight: 700;
                                color: #2c3e50;
                            }

                            .payment-progress-section {
                                margin-top: 20px;
                            }

                            .progress-header {
                                display: flex;
                                justify-content: space-between;
                                align-items: center;
                                margin-bottom: 10px;
                            }

                            .progress-label {
                                font-weight: 600;
                                color: #2c3e50;
                            }

                            .progress-percentage {
                                font-weight: 700;
                                color: #2ecc71;
                                font-size: 1.1rem;
                            }

                            .payment-progress {
                                background: #e9ecef;
                                border-radius: 15px;
                                height: 12px;
                                margin-bottom: 8px;
                                overflow: hidden;
                                box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
                            }

                            .payment-progress-bar {
                                height: 100%;
                                background: linear-gradient(90deg, #2ecc71, #27ae60);
                                transition: width 0.8s ease;
                                border-radius: 15px;
                                position: relative;
                            }

                            .payment-progress-bar::after {
                                content: '';
                                position: absolute;
                                top: 0;
                                left: 0;
                                right: 0;
                                bottom: 0;
                                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
                                animation: shimmer 2s infinite;
                            }

                            @keyframes shimmer {
                                0% {
                                    transform: translateX(-100%);
                                }

                                100% {
                                    transform: translateX(100%);
                                }
                            }

                            .progress-status {
                                font-size: 0.9rem;
                                color: #7f8c8d;
                                text-align: center;
                                font-weight: 500;
                            }

                            .payment-history-section {
                                padding: 30px;
                            }

                            .history-header {
                                display: flex;
                                justify-content: space-between;
                                align-items: center;
                                margin-bottom: 25px;
                            }

                            .history-header h3 {
                                font-size: 1.3rem;
                                font-weight: 600;
                                color: #2c3e50;
                                margin: 0;
                                display: flex;
                                align-items: center;
                                gap: 10px;
                            }

                            .history-stats {
                                display: flex;
                                gap: 15px;
                            }

                            .stat-item {
                                display: flex;
                                align-items: center;
                                gap: 8px;
                                font-size: 0.9rem;
                                color: #7f8c8d;
                                font-weight: 500;
                            }

                            .payment-history-content {
                                background: white;
                                border-radius: 15px;
                                overflow: hidden;
                                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
                                border: 1px solid #e9ecef;
                            }

                            .payment-history-table {
                                width: 100%;
                                border-collapse: collapse;
                            }

                            .payment-history-table th {
                                background: #f8f9fa;
                                padding: 15px 20px;
                                text-align: left;
                                font-weight: 600;
                                color: #2c3e50;
                                border-bottom: 2px solid #e9ecef;
                                font-size: 0.9rem;
                                display: flex;
                                align-items: center;
                                gap: 8px;
                            }

                            .payment-history-table th i {
                                color: #7f8c8d;
                            }

                            .payment-history-table td {
                                padding: 15px 20px;
                                border-bottom: 1px solid #f1f3f4;
                                color: #2c3e50;
                            }

                            .payment-history-table tr:hover {
                                background: #f8f9fa;
                            }

                            .payment-history-table tr:last-child td {
                                border-bottom: none;
                            }

                            .payment-mode-badge {
                                padding: 6px 12px;
                                border-radius: 20px;
                                font-size: 0.8rem;
                                font-weight: 600;
                                text-transform: uppercase;
                                letter-spacing: 0.5px;
                            }

                            .payment-mode-cash {
                                background: #d4edda;
                                color: #155724;
                            }

                            .payment-mode-card {
                                background: #d1ecf1;
                                color: #0c5460;
                            }

                            .payment-mode-upi {
                                background: #fff3cd;
                                color: #856404;
                            }

                            .payment-mode-net-banking {
                                background: #f8d7da;
                                color: #721c24;
                            }

                            .payment-mode-insurance {
                                background: #e2e3e5;
                                color: #383d41;
                            }

                            .payment-mode-emi {
                                background: #d1ecf1;
                                color: #0c5460;
                            }

                            .transaction-type-badge {
                                padding: 6px 12px;
                                border-radius: 20px;
                                font-size: 0.8rem;
                                font-weight: 600;
                                text-transform: uppercase;
                                letter-spacing: 0.5px;
                            }

                            .transaction-type-capture {
                                background: #d4edda;
                                color: #155724;
                            }

                            .transaction-type-refund {
                                background: #f8d7da;
                                color: #721c24;
                            }

                            .transaction-type-authorization {
                                background: #fff3cd;
                                color: #856404;
                            }

                            .transaction-type-void {
                                background: #e2e3e5;
                                color: #383d41;
                            }

                            .no-payments {
                                text-align: center;
                                padding: 60px 20px;
                                color: #7f8c8d;
                            }

                            .no-payments-icon {
                                width: 80px;
                                height: 80px;
                                background: #f8f9fa;
                                border-radius: 50%;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                margin: 0 auto 20px;
                                color: #bdc3c7;
                                font-size: 2rem;
                            }

                            .no-payments h4 {
                                font-size: 1.2rem;
                                font-weight: 600;
                                color: #2c3e50;
                                margin: 0 0 10px 0;
                            }

                            .no-payments p {
                                font-size: 0.95rem;
                                margin: 0;
                                opacity: 0.8;
                            }

                            .no-records p {
                                font-size: 0.95rem;
                                margin: 0;
                                opacity: 0.8;
                            }

                            .today-pending-section {
                                background: white;
                                border-radius: 15px;
                                padding: 25px;
                                margin-bottom: 30px;
                                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                            }

                            .section-header {
                                display: flex;
                                justify-content: space-between;
                                align-items: center;
                                margin-bottom: 20px;
                            }

                            .section-header .section-title {
                                margin: 0;
                                font-size: 1.3rem;
                                font-weight: 600;
                                color: #2c3e50;
                                display: flex;
                                align-items: center;
                                gap: 10px;
                            }

                            .today-pending-content {
                                min-height: 100px;
                            }

                            .table {
                                width: 100%;
                                border-collapse: collapse;
                                background: white;
                                border-radius: 8px;
                                overflow: hidden;
                                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
                            }

                            .table thead th {
                                background: #f8f9fa;
                                color: #2c3e50;
                                font-weight: 600;
                                padding: 15px 12px;
                                text-align: left;
                                border-bottom: 2px solid #e9ecef;
                                font-size: 0.9rem;
                            }

                            .table tbody td {
                                padding: 12px;
                                border-bottom: 1px solid #f1f3f4;
                                color: #2c3e50;
                                font-size: 0.9rem;
                            }

                            .table tbody tr:hover {
                                background: #f8f9fa;
                            }

                            .table tbody tr:last-child td {
                                border-bottom: none;
                            }

                            .text-center {
                                text-align: center;
                            }

                            .text-danger {
                                color: #e74c3c;
                            }

                            .table .btn {
                                padding: 6px 12px;
                                font-size: 0.8rem;
                                margin: 2px;
                            }

                            .table .btn-success {
                                background: linear-gradient(135deg, #2ecc71, #27ae60);
                                color: white;
                                border: none;
                            }

                            .table .btn-success:hover {
                                background: linear-gradient(135deg, #27ae60, #229954);
                                transform: translateY(-1px);
                                box-shadow: 0 2px 8px rgba(46, 204, 113, 0.3);
                            }

                            .examination-id {
                                font-weight: 600;
                                color: #3498db;
                                font-family: 'Courier New', monospace;
                                background: #f8f9fa;
                                padding: 4px 8px;
                                border-radius: 4px;
                                border: 1px solid #e9ecef;
                            }

                            .examination-id-link {
                                text-decoration: none;
                                display: inline-block;
                                transition: all 0.3s ease;
                            }

                            .examination-id-link:hover {
                                transform: translateY(-1px);
                                box-shadow: 0 2px 8px rgba(52, 152, 219, 0.3);
                            }

                            .examination-id-link:hover .examination-id {
                                background: #3498db;
                                color: white;
                                border-color: #3498db;
                            }

                            .loading-spinner {
                                text-align: center;
                                padding: 40px 20px;
                                color: #7f8c8d;
                            }

                            .loading-spinner i {
                                font-size: 2rem;
                                margin-bottom: 15px;
                                color: #3498db;
                            }

                            .today-pending-grid {
                                display: grid;
                                grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
                                gap: 20px;
                            }

                            .today-pending-card {
                                border: 2px solid #e9ecef;
                                border-radius: 12px;
                                padding: 15px;
                                transition: all 0.3s ease;
                                background: #f8f9fa;
                            }

                            .today-pending-card:hover {
                                border-color: #3498db;
                                box-shadow: 0 4px 12px rgba(52, 152, 219, 0.1);
                                background: white;
                            }

                            .today-pending-header {
                                display: flex;
                                justify-content: space-between;
                                align-items: flex-start;
                                margin-bottom: 12px;
                            }

                            .today-pending-title {
                                font-weight: 600;
                                color: #2c3e50;
                                font-size: 1rem;
                            }

                            .today-pending-patient {
                                font-size: 0.85rem;
                                color: #7f8c8d;
                                margin-bottom: 3px;
                            }

                            .today-pending-details {
                                display: grid;
                                grid-template-columns: 1fr 1fr 1fr;
                                gap: 10px;
                            }

                            .no-today-pending {
                                text-align: center;
                                padding: 40px 20px;
                                color: #7f8c8d;
                            }

                            .no-today-pending i {
                                font-size: 2.5rem;
                                margin-bottom: 15px;
                                color: #bdc3c7;
                            }

                            .no-today-pending h4 {
                                font-size: 1.1rem;
                                font-weight: 600;
                                color: #2c3e50;
                                margin: 0 0 10px 0;
                            }

                            .no-today-pending p {
                                font-size: 0.9rem;
                                margin: 0;
                                opacity: 0.8;
                            }

                            @media (max-width: 768px) {
                                .search-form {
                                    flex-direction: column;
                                }

                                .examinations-grid {
                                    grid-template-columns: 1fr;
                                }

                                .examination-details {
                                    grid-template-columns: 1fr;
                                }

                                .payment-history-modal {
                                    width: 98%;
                                    max-height: 90vh;
                                    border-radius: 15px;
                                }

                                .payment-history-header {
                                    padding: 20px 20px 15px 20px;
                                    flex-direction: column;
                                    gap: 15px;
                                    align-items: stretch;
                                }

                                .header-content {
                                    text-align: center;
                                }

                                .payment-history-title {
                                    font-size: 1.5rem;
                                    justify-content: center;
                                }

                                .payment-history-close {
                                    align-self: flex-end;
                                    margin-top: -40px;
                                }

                                .examination-summary {
                                    padding: 20px;
                                }

                                .examination-summary-grid {
                                    grid-template-columns: 1fr;
                                    gap: 15px;
                                }

                                .summary-card {
                                    padding: 15px;
                                }

                                .summary-icon {
                                    width: 40px;
                                    height: 40px;
                                    font-size: 1rem;
                                }

                                .payment-overview {
                                    padding: 20px;
                                }

                                .overview-cards {
                                    grid-template-columns: 1fr;
                                    gap: 12px;
                                }

                                .overview-card {
                                    padding: 15px;
                                }

                                .overview-icon {
                                    width: 35px;
                                    height: 35px;
                                    font-size: 0.9rem;
                                }

                                .overview-value {
                                    font-size: 1.1rem;
                                }

                                .payment-history-section {
                                    padding: 20px;
                                }

                                .history-header {
                                    flex-direction: column;
                                    gap: 15px;
                                    align-items: stretch;
                                }

                                .history-header h3 {
                                    text-align: center;
                                    justify-content: center;
                                }

                                .history-stats {
                                    justify-content: center;
                                }

                                .payment-history-table {
                                    font-size: 0.85rem;
                                }

                                .payment-history-table th,
                                .payment-history-table td {
                                    padding: 10px 12px;
                                }

                                .payment-history-table th {
                                    flex-direction: column;
                                    gap: 4px;
                                    text-align: center;
                                }

                                .payment-mode-badge {
                                    padding: 4px 8px;
                                    font-size: 0.75rem;
                                }

                                .no-payments {
                                    padding: 40px 15px;
                                }

                                .no-payments-icon {
                                    width: 60px;
                                    height: 60px;
                                    font-size: 1.5rem;
                                }
                            }

                            /* Analytics Dashboard Styles */
                            .analytics-dashboard {
                                background: white;
                                border-radius: 15px;
                                padding: 25px;
                                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                                margin-bottom: 30px;
                            }

                            .dashboard-header {
                                display: flex;
                                justify-content: space-between;
                                align-items: center;
                                margin-bottom: 25px;
                                padding-bottom: 15px;
                                border-bottom: 2px solid #f1f3f4;
                            }

                            .analytics-grid {
                                display: grid;
                                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                                gap: 20px;
                            }

                            .analytics-card {
                                background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
                                border-radius: 15px;
                                padding: 25px;
                                display: flex;
                                align-items: center;
                                gap: 20px;
                                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
                                border: 1px solid #e9ecef;
                                transition: all 0.3s ease;
                                position: relative;
                                overflow: hidden;
                            }

                            .analytics-card::before {
                                content: '';
                                position: absolute;
                                top: 0;
                                left: 0;
                                right: 0;
                                height: 4px;
                                background: linear-gradient(90deg, #667eea, #764ba2);
                            }

                            .analytics-card:hover {
                                transform: translateY(-5px);
                                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
                            }

                            .analytics-card.total-revenue::before {
                                background: linear-gradient(90deg, #2ecc71, #27ae60);
                            }

                            .analytics-card.pending-amount::before {
                                background: linear-gradient(90deg, #f39c12, #e67e22);
                            }

                            .analytics-card.collection-rate::before {
                                background: linear-gradient(90deg, #3498db, #2980b9);
                            }

                            .analytics-card.avg-payment::before {
                                background: linear-gradient(90deg, #9b59b6, #8e44ad);
                            }

                            .analytics-icon {
                                width: 60px;
                                height: 60px;
                                border-radius: 15px;
                                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                color: white;
                                font-size: 1.5rem;
                                flex-shrink: 0;
                            }

                            .analytics-card.total-revenue .analytics-icon {
                                background: linear-gradient(135deg, #2ecc71, #27ae60);
                            }

                            .analytics-card.pending-amount .analytics-icon {
                                background: linear-gradient(135deg, #f39c12, #e67e22);
                            }

                            .analytics-card.collection-rate .analytics-icon {
                                background: linear-gradient(135deg, #3498db, #2980b9);
                            }

                            .analytics-card.avg-payment .analytics-icon {
                                background: linear-gradient(135deg, #9b59b6, #8e44ad);
                            }

                            .analytics-content {
                                flex: 1;
                            }

                            .analytics-value {
                                font-size: 2rem;
                                font-weight: 700;
                                color: #2c3e50;
                                margin-bottom: 5px;
                            }

                            .analytics-label {
                                font-size: 0.9rem;
                                color: #7f8c8d;
                                font-weight: 500;
                                margin-bottom: 8px;
                            }

                            .analytics-change {
                                font-size: 0.8rem;
                                font-weight: 600;
                                padding: 4px 8px;
                                border-radius: 12px;
                                background: #e8f5e8;
                                color: #27ae60;
                                display: inline-block;
                            }

                            .analytics-change.negative {
                                background: #fdf2f2;
                                color: #e74c3c;
                            }

                            /* Enhanced Filter Styles */
                            .filter-header {
                                display: flex;
                                justify-content: space-between;
                                align-items: center;
                                margin-bottom: 20px;
                                flex-wrap: wrap;
                                gap: 15px;
                            }

                            .filter-actions {
                                display: flex;
                                gap: 10px;
                            }

                            .advanced-filter-form {
                                margin-bottom: 20px;
                            }

                            .filter-row {
                                display: grid;
                                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                                gap: 15px;
                                margin-bottom: 15px;
                            }

                            .quick-filters {
                                display: flex;
                                align-items: center;
                                gap: 10px;
                                flex-wrap: wrap;
                                padding-top: 15px;
                                border-top: 1px solid #e9ecef;
                            }

                            .quick-filter-label {
                                font-weight: 600;
                                color: #2c3e50;
                                margin-right: 10px;
                            }

                            .btn-outline-primary {
                                border: 2px solid #3498db;
                                color: #3498db;
                                background: transparent;
                            }

                            .btn-outline-primary:hover {
                                background: #3498db;
                                color: white;
                            }

                            .btn-outline-warning {
                                border: 2px solid #f39c12;
                                color: #f39c12;
                                background: transparent;
                            }

                            .btn-outline-warning:hover {
                                background: #f39c12;
                                color: white;
                            }

                            .btn-outline-success {
                                border: 2px solid #2ecc71;
                                color: #2ecc71;
                                background: transparent;
                            }

                            .btn-outline-success:hover {
                                background: #2ecc71;
                                color: white;
                            }

                            .btn-outline-secondary {
                                border: 2px solid #6c757d;
                                color: #6c757d;
                                background: transparent;
                            }

                            .btn-outline-secondary:hover {
                                background: #6c757d;
                                color: white;
                            }

                            .btn-sm {
                                padding: 6px 12px;
                                font-size: 0.85rem;
                            }

                            /* Bulk Operations Styles */
                            .bulk-operations {
                                background: #f8f9fa;
                                border-radius: 10px;
                                padding: 15px;
                                margin-bottom: 20px;
                                display: none;
                                border-left: 4px solid #3498db;
                            }

                            .bulk-operations.show {
                                display: block;
                            }

                            .bulk-header {
                                display: flex;
                                justify-content: space-between;
                                align-items: center;
                                margin-bottom: 15px;
                            }

                            .bulk-actions {
                                display: flex;
                                gap: 10px;
                                flex-wrap: wrap;
                            }

                            .selected-count {
                                font-weight: 600;
                                color: #3498db;
                            }

                            /* Enhanced Examination Cards */
                            .examination-card {
                                position: relative;
                            }

                            .examination-checkbox {
                                position: absolute;
                                top: 15px;
                                right: 15px;
                                width: 20px;
                                height: 20px;
                                cursor: pointer;
                            }

                            .examination-card.selected {
                                border-color: #3498db;
                                background: #f8f9fa;
                                box-shadow: 0 4px 15px rgba(52, 152, 219, 0.2);
                            }

                            /* Export Modal Styles */
                            .export-modal {
                                position: fixed;
                                top: 50%;
                                left: 50%;
                                transform: translate(-50%, -50%);
                                background: white;
                                border-radius: 15px;
                                padding: 30px;
                                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
                                z-index: 1000;
                                display: none;
                                max-width: 500px;
                                width: 90%;
                            }

                            .export-modal.show {
                                display: block;
                            }

                            .export-options {
                                display: grid;
                                grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
                                gap: 15px;
                                margin: 20px 0;
                            }

                            .export-option {
                                padding: 15px;
                                border: 2px solid #e9ecef;
                                border-radius: 10px;
                                text-align: center;
                                cursor: pointer;
                                transition: all 0.3s ease;
                            }

                            .export-option:hover {
                                border-color: #3498db;
                                background: #f8f9fa;
                            }

                            .export-option.selected {
                                border-color: #3498db;
                                background: #e3f2fd;
                            }

                            .export-option i {
                                font-size: 2rem;
                                margin-bottom: 10px;
                                color: #3498db;
                            }

                            @media (max-width: 768px) {
                                .analytics-grid {
                                    grid-template-columns: 1fr;
                                }

                                .analytics-card {
                                    padding: 20px;
                                }

                                .analytics-value {
                                    font-size: 1.5rem;
                                }

                                .filter-header {
                                    flex-direction: column;
                                    align-items: stretch;
                                }

                                .filter-actions {
                                    justify-content: center;
                                }

                                .filter-row {
                                    grid-template-columns: 1fr;
                                }

                                .quick-filters {
                                    justify-content: center;
                                }
                            }

                            @media (max-width: 480px) {
                                .payment-history-modal {
                                    width: 100%;
                                    height: 100vh;
                                    max-height: 100vh;
                                    border-radius: 0;
                                    transform: none;
                                    top: 0;
                                    left: 0;
                                }

                                .payment-history-modal.show {
                                    animation: modalSlideUp 0.3s ease-out;
                                }

                                @keyframes modalSlideUp {
                                    from {
                                        opacity: 0;
                                        transform: translateY(100%);
                                    }

                                    to {
                                        opacity: 1;
                                        transform: translateY(0);
                                    }
                                }

                                .payment-history-header {
                                    border-radius: 0;
                                }

                                .examination-summary-grid {
                                    grid-template-columns: 1fr;
                                }

                                .overview-cards {
                                    grid-template-columns: 1fr;
                                }

                                .payment-history-table {
                                    font-size: 0.8rem;
                                }

                                .payment-history-table th,
                                .payment-history-table td {
                                    padding: 8px 10px;
                                }

                                .analytics-card {
                                    flex-direction: column;
                                    text-align: center;
                                    gap: 15px;
                                }

                                .analytics-icon {
                                    width: 50px;
                                    height: 50px;
                                    font-size: 1.2rem;
                                }
                            }
                        </style>
                    </head>

                    <body>
                        <div class="welcome-container">
                            <jsp:include page="/WEB-INF/views/common/menu.jsp" />
                            <div class="main-content">
                                <div class="payments-header">
                                    <h1 class="payments-title">
                                        <i class="fas fa-book"></i>
                                        Patient Payment Ledger
                                    </h1>
                                    <p style="color: #7f8c8d; margin: 0;">Complete payment history and transaction
                                        ledger for all patient examinations</p>
                                </div>

                                <div class="search-section">
                                    <label for="registrationCode" class="search-label">Patient Registration Code</label>
                                    <form class="search-form" id="patientSearchForm" onsubmit="return false;">
                                        <input type="text" id="registrationCode" name="registrationCode"
                                            class="search-input" placeholder="Enter registration code" required>
                                        <button type="button" class="btn btn-primary search-btn"
                                            onclick="handleSearch()">
                                            <i class="fas fa-search"></i>
                                            Search Patient
                                        </button>
                                    </form>
                                </div>

                                <!-- Enhanced Analytics Dashboard -->
                                <div class="analytics-dashboard" id="analyticsDashboard"
                                    style="display: none; margin-bottom: 30px;">
                                    <div class="dashboard-header">
                                        <h2 class="section-title">
                                            <i class="fas fa-chart-line"></i>
                                            Payment Analytics Dashboard
                                        </h2>
                                        <button class="btn btn-secondary" onclick="toggleAnalytics()">
                                            <i class="fas fa-eye-slash"></i>
                                            Hide Analytics
                                        </button>
                                    </div>
                                    <div class="analytics-grid">
                                        <div class="analytics-card total-revenue">
                                            <div class="analytics-icon">
                                                <i class="fas fa-money-bill-wave"></i>
                                            </div>
                                            <div class="analytics-content">
                                                <div class="analytics-value" id="totalRevenue">₹0</div>
                                                <div class="analytics-label">Total Revenue</div>
                                                <div class="analytics-change" id="revenueChange">+0%</div>
                                            </div>
                                        </div>
                                        <div class="analytics-card pending-amount">
                                            <div class="analytics-icon">
                                                <i class="fas fa-clock"></i>
                                            </div>
                                            <div class="analytics-content">
                                                <div class="analytics-value" id="pendingAmount">₹0</div>
                                                <div class="analytics-label">Pending Amount</div>
                                                <div class="analytics-change" id="pendingChange">0 patients</div>
                                            </div>
                                        </div>
                                        <div class="analytics-card collection-rate">
                                            <div class="analytics-icon">
                                                <i class="fas fa-percentage"></i>
                                            </div>
                                            <div class="analytics-content">
                                                <div class="analytics-value" id="collectionRate">0%</div>
                                                <div class="analytics-label">Collection Rate</div>
                                                <div class="analytics-change" id="collectionTrend">Stable</div>
                                            </div>
                                        </div>
                                        <div class="analytics-card avg-payment">
                                            <div class="analytics-icon">
                                                <i class="fas fa-calculator"></i>
                                            </div>
                                            <div class="analytics-content">
                                                <div class="analytics-value" id="avgPayment">₹0</div>
                                                <div class="analytics-label">Avg Payment</div>
                                                <div class="analytics-change" id="paymentTrend">Per transaction</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Enhanced Filter Section -->
                                <div class="filter-section"
                                    style="margin-bottom: 30px; background: #fff; border-radius: 12px; padding: 20px; box-shadow: 0 2px 8px rgba(0,0,0,0.05);">
                                    <div class="filter-header">
                                        <h3
                                            style="margin: 0 0 15px 0; color: #2c3e50; display: flex; align-items: center; gap: 10px;">
                                            <i class="fas fa-filter"></i>
                                            Advanced Filters & Analytics
                                        </h3>
                                        <div class="filter-actions">
                                            <button type="button" class="btn btn-info" onclick="toggleAnalytics()">
                                                <i class="fas fa-chart-bar"></i>
                                                Show Analytics
                                            </button>
                                            <button type="button" class="btn btn-success" onclick="exportPaymentData()">
                                                <i class="fas fa-download"></i>
                                                Export Data
                                            </button>
                                        </div>
                                    </div>

                                    <form id="paymentFilterForm" class="advanced-filter-form" method="get" action="">
                                        <div class="filter-row">
                                            <div class="form-group">
                                                <label for="startDate" class="search-label">Start Date</label>
                                                <input type="date" id="startDate" name="startDate" class="search-input">
                                            </div>
                                            <div class="form-group">
                                                <label for="endDate" class="search-label">End Date</label>
                                                <input type="date" id="endDate" name="endDate" class="search-input">
                                            </div>
                                            <div class="form-group">
                                                <label class="search-label">Payment Status</label>
                                                <select id="paymentStatus" name="paymentStatus" class="search-input">
                                                    <option value="all">All Status</option>
                                                    <option value="pending">Pending Only</option>
                                                    <option value="partial">Partial Payments</option>
                                                    <option value="completed">Completed</option>
                                                    <option value="no_charge">No Charge</option>
                                                </select>
                                            </div>
                                            <div class="form-group">
                                                <label class="search-label">Amount Range</label>
                                                <select id="amountRange" name="amountRange" class="search-input">
                                                    <option value="all">All Amounts</option>
                                                    <option value="0-1000">₹0 - ₹1,000</option>
                                                    <option value="1000-5000">₹1,000 - ₹5,000</option>
                                                    <option value="5000-10000">₹5,000 - ₹10,000</option>
                                                    <option value="10000+">₹10,000+</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="filter-row">
                                            <div class="form-group">
                                                <label class="search-label">Payment Mode</label>
                                                <select id="paymentMode" name="paymentMode" class="search-input">
                                                    <option value="all">All Modes</option>
                                                    <option value="CASH">Cash</option>
                                                    <option value="CARD">Card</option>
                                                    <option value="UPI">UPI</option>
                                                    <option value="NET_BANKING">Net Banking</option>
                                                    <option value="INSURANCE">Insurance</option>
                                                    <option value="EMI">EMI</option>
                                                </select>
                                            </div>
                                            <div class="form-group">
                                                <label class="search-label">Procedure Type</label>
                                                <input type="text" id="procedureFilter" name="procedureFilter"
                                                    class="search-input" placeholder="Filter by procedure name">
                                            </div>
                                            <div class="form-group">
                                                <label class="search-label">Sort By</label>
                                                <select id="sortBy" name="sortBy" class="search-input">
                                                    <option value="date_desc">Date (Newest First)</option>
                                                    <option value="date_asc">Date (Oldest First)</option>
                                                    <option value="amount_desc">Amount (High to Low)</option>
                                                    <option value="amount_asc">Amount (Low to High)</option>
                                                    <option value="status">Payment Status</option>
                                                </select>
                                            </div>
                                            <div class="form-group">
                                                <button type="submit" class="btn btn-primary search-btn"
                                                    style="margin-top: 25px;">
                                                    <i class="fas fa-search"></i> Apply Filters
                                                </button>
                                            </div>
                                        </div>
                                    </form>

                                    <!-- Quick Filter Buttons -->
                                    <div class="quick-filters">
                                        <span class="quick-filter-label">Quick Filters:</span>
                                        <button type="button" class="btn btn-outline-primary btn-sm"
                                            onclick="applyQuickFilter('today')">
                                            <i class="fas fa-calendar-day"></i> Today
                                        </button>
                                        <button type="button" class="btn btn-outline-primary btn-sm"
                                            onclick="applyQuickFilter('week')">
                                            <i class="fas fa-calendar-week"></i> This Week
                                        </button>
                                        <button type="button" class="btn btn-outline-primary btn-sm"
                                            onclick="applyQuickFilter('month')">
                                            <i class="fas fa-calendar-alt"></i> This Month
                                        </button>
                                        <button type="button" class="btn btn-outline-warning btn-sm"
                                            onclick="applyQuickFilter('pending')">
                                            <i class="fas fa-clock"></i> Pending Only
                                        </button>
                                        <button type="button" class="btn btn-outline-success btn-sm"
                                            onclick="applyQuickFilter('completed')">
                                            <i class="fas fa-check"></i> Completed Only
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary btn-sm"
                                            onclick="clearAllFilters()">
                                            <i class="fas fa-times"></i> Clear All
                                        </button>
                                    </div>
                                </div>

                                <div class="today-pending-section">
                                    <div class="section-header">
                                        <h2 class="section-title">
                                            <i class="fas fa-calendar-day"></i>
                                            Today's Pending Payments
                                        </h2>
                                    </div>
                                    <div class="today-pending-content" id="todayPendingContent">
                                        <table class="table table-striped" id="todayPendingTable">
                                            <thead>
                                                <tr>
                                                    <th>Examination ID</th>
                                                    <th>Registration Code</th>
                                                    <th>Patient Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Procedure</th>
                                                    <th>Total Amount</th>
                                                    <th>Paid Amount</th>
                                                    <th>Remaining Amount</th>
                                                    <th>Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td colspan="9" class="text-center">
                                                        <div class="loading-spinner" id="todayLoadingSpinner">
                                                            <i class="fas fa-spinner fa-spin"></i>
                                                            Loading today's pending payments...
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                                <div class="patient-info" id="patientInfo">
                                    <div class="patient-header">
                                        <div>
                                            <div class="patient-name" id="patientName"></div>
                                            <div class="patient-meta" id="patientMeta"></div>
                                        </div>
                                    </div>

                                    <!-- Patient Payment Summary -->
                                    <div class="patient-summary" id="patientSummary" style="display: none;">
                                        <div class="summary-cards">
                                            <div class="summary-card total-examinations">
                                                <div class="summary-icon">
                                                    <i class="fas fa-stethoscope"></i>
                                                </div>
                                                <div class="summary-content">
                                                    <div class="summary-value" id="totalExaminations">0</div>
                                                    <div class="summary-label">Total Examinations</div>
                                                </div>
                                            </div>
                                            <div class="summary-card total-amount">
                                                <div class="summary-icon">
                                                    <i class="fas fa-money-bill-wave"></i>
                                                </div>
                                                <div class="summary-content">
                                                    <div class="summary-value" id="totalAmount">₹0</div>
                                                    <div class="summary-label">Total Amount</div>
                                                </div>
                                            </div>
                                            <div class="summary-card paid-amount">
                                                <div class="summary-icon">
                                                    <i class="fas fa-check-circle"></i>
                                                </div>
                                                <div class="summary-content">
                                                    <div class="summary-value" id="paidAmountSummary">₹0</div>
                                                    <div class="summary-label">Amount Paid</div>
                                                </div>
                                            </div>
                                            <div class="summary-card pending-amount-summary">
                                                <div class="summary-icon">
                                                    <i class="fas fa-clock"></i>
                                                </div>
                                                <div class="summary-content">
                                                    <div class="summary-value" id="pendingAmountSummary">₹0</div>
                                                    <div class="summary-label">Amount Pending</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="examinations-section" id="examinationsSection" style="display: none;">
                                    <!-- Bulk Operations Section -->
                                    <div class="bulk-operations" id="bulkOperations">
                                        <div class="bulk-header">
                                            <div>
                                                <span class="selected-count" id="selectedCount">0</span> examinations
                                                selected
                                            </div>
                                            <button class="btn btn-secondary btn-sm" onclick="clearSelection()">
                                                <i class="fas fa-times"></i>
                                                Clear Selection
                                            </button>
                                        </div>
                                        <div class="bulk-actions">
                                            <button class="btn btn-success btn-sm" onclick="bulkCollectPayment()">
                                                <i class="fas fa-money-bill-wave"></i>
                                                Bulk Collect Payment
                                            </button>
                                            <button class="btn btn-info btn-sm" onclick="bulkExportSelected()">
                                                <i class="fas fa-download"></i>
                                                Export Selected
                                            </button>
                                            <button class="btn btn-warning btn-sm" onclick="bulkSendReminders()">
                                                <i class="fas fa-bell"></i>
                                                Send Reminders
                                            </button>
                                        </div>
                                    </div>

                                    <div class="section-header">
                                        <h2 class="section-title">
                                            <i class="fas fa-stethoscope"></i>
                                            Examinations & Payments
                                        </h2>
                                        <div class="section-actions">
                                            <button class="btn btn-outline-primary btn-sm" onclick="toggleSelectMode()">
                                                <i class="fas fa-check-square"></i>
                                                <span id="selectModeText">Select Mode</span>
                                            </button>
                                            <button class="btn btn-outline-info btn-sm" onclick="refreshExaminations()">
                                                <i class="fas fa-sync-alt"></i>
                                                Refresh
                                            </button>
                                        </div>
                                    </div>

                                    <div class="examinations-grid" id="examinationsGrid">
                                        <!-- Examinations will be loaded here -->
                                    </div>
                                </div>

                                <div class="no-records" id="noRecords">
                                    <i class="fas fa-search"></i>
                                    <p>Search for a patient by registration code to view their complete payment history
                                        and transaction ledger.</p>
                                </div>
                            </div>
                        </div>

                        <div class="overlay" id="overlay"></div>

                        <div class="payment-form" id="paymentForm">
                            <h3 style="margin-top: 0; color: #2c3e50;">Collect Payment</h3>
                            <div class="payment-summary" id="paymentSummary">
                                <!-- Payment summary will be populated here -->
                            </div>
                            <div class="payment-form-row">
                                <select class="payment-mode-select" name="paymentMode" required>
                                    <option value="">Select Payment Mode</option>
                                    <option value="CASH">Cash</option>
                                    <option value="CARD">Card</option>
                                    <option value="UPI">UPI</option>
                                    <option value="NET_BANKING">Net Banking</option>
                                    <option value="INSURANCE">Insurance</option>
                                    <option value="EMI">EMI</option>
                                </select>
                                <input type="number" class="payment-amount-input" name="paymentAmount"
                                    placeholder="Enter payment amount" step="0.01" required>
                                <div class="amount-error" id="amountError"></div>
                                <textarea class="payment-notes" name="paymentNotes"
                                    placeholder="Payment notes (optional)" rows="3"></textarea>
                            </div>
                            <div class="payment-form-actions">
                                <button type="button" class="btn btn-cancel" onclick="hidePaymentForm()">
                                    <i class="fas fa-times"></i>
                                    Cancel
                                </button>
                                <button type="button" class="btn btn-success" onclick="collectPayment()">
                                    <i class="fas fa-check"></i>
                                    Confirm Payment
                                </button>
                            </div>
                        </div>

                        <!-- Export Modal -->
                        <div class="export-modal" id="exportModal">
                            <h3 style="margin-top: 0; color: #2c3e50; text-align: center;">
                                <i class="fas fa-download"></i>
                                Export Payment Data
                            </h3>
                            <p style="text-align: center; color: #7f8c8d; margin-bottom: 25px;">
                                Choose your preferred export format and options
                            </p>

                            <div class="export-options">
                                <div class="export-option" data-format="excel">
                                    <i class="fas fa-file-excel"></i>
                                    <div>Excel</div>
                                </div>
                                <div class="export-option" data-format="pdf">
                                    <i class="fas fa-file-pdf"></i>
                                    <div>PDF</div>
                                </div>
                                <div class="export-option" data-format="csv">
                                    <i class="fas fa-file-csv"></i>
                                    <div>CSV</div>
                                </div>
                            </div>

                            <div style="margin: 20px 0;">
                                <label style="display: block; margin-bottom: 10px; font-weight: 600; color: #2c3e50;">
                                    <input type="checkbox" id="includePaymentHistory" checked
                                        style="margin-right: 8px;">
                                    Include detailed payment history
                                </label>
                                <label style="display: block; margin-bottom: 10px; font-weight: 600; color: #2c3e50;">
                                    <input type="checkbox" id="includePatientInfo" checked style="margin-right: 8px;">
                                    Include patient information
                                </label>
                                <label style="display: block; margin-bottom: 10px; font-weight: 600; color: #2c3e50;">
                                    <input type="checkbox" id="includeSummary" checked style="margin-right: 8px;">
                                    Include summary statistics
                                </label>
                            </div>

                            <div style="display: flex; gap: 10px; justify-content: flex-end; margin-top: 25px;">
                                <button type="button" class="btn btn-cancel" onclick="hideExportModal()">
                                    <i class="fas fa-times"></i>
                                    Cancel
                                </button>
                                <button type="button" class="btn btn-success" onclick="performExport()">
                                    <i class="fas fa-download"></i>
                                    Export Data
                                </button>
                            </div>
                        </div>

                        <!-- Payment History Modal -->
                        <div class="payment-history-modal" id="paymentHistoryModal">
                            <div class="payment-history-header">
                                <div class="header-content">
                                    <h2 class="payment-history-title">
                                        <i class="fas fa-receipt"></i>
                                        Payment History
                                    </h2>
                                    <p class="payment-history-subtitle">Detailed payment information for this
                                        examination
                                    </p>
                                </div>
                                <button class="payment-history-close" onclick="hidePaymentHistory()" title="Close">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>

                            <div class="examination-summary" id="examinationSummary"></div>
                            <div class="summary-header">
                                <h3><i class="fas fa-stethoscope"></i> Examination Details</h3>
                            </div>
                            <div class="examination-summary-grid">
                                <div class="summary-card">
                                    <div class="summary-icon">
                                        <i class="fas fa-calendar-alt"></i>
                                    </div>
                                    <div class="summary-content">
                                        <span class="summary-label">Examination Date</span>
                                        <span class="summary-value" id="examinationDate"></span>
                                    </div>
                                </div>
                                <div class="summary-card">
                                    <div class="summary-icon">
                                        <i class="fas fa-hospital"></i>
                                    </div>
                                    <div class="summary-content">
                                        <span class="summary-label">Treating Clinic</span>
                                        <span class="summary-value" id="clinicName"></span>
                                    </div>
                                </div>
                                <div class="summary-card">
                                    <div class="summary-icon">
                                        <i class="fas fa-tooth"></i>
                                    </div>
                                    <div class="summary-content">
                                        <span class="summary-label">Tooth Number</span>
                                        <span class="summary-value" id="toothNumber"></span>
                                    </div>
                                </div>
                                <div class="summary-card">
                                    <div class="summary-icon">
                                        <i class="fas fa-procedures"></i>
                                    </div>
                                    <div class="summary-content">
                                        <span class="summary-label">Procedure</span>
                                        <span class="summary-value" id="procedureName"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="payment-overview">
                                <div class="overview-header">
                                    <h3><i class="fas fa-chart-pie"></i> Payment Overview</h3>
                                </div>
                                <div class="overview-cards">
                                    <div class="overview-card total">
                                        <div class="overview-icon">
                                            <i class="fas fa-money-bill-wave"></i>
                                        </div>
                                        <div class="overview-content">
                                            <span class="overview-label">Total Amount</span>
                                            <span class="overview-value" id="totalAmount"></span>
                                        </div>
                                    </div>
                                    <div class="overview-card paid">
                                        <div class="overview-icon">
                                            <i class="fas fa-check-circle"></i>
                                        </div>
                                        <div class="overview-content">
                                            <span class="overview-label">Paid Amount</span>
                                            <span class="overview-value" id="paidAmount"></span>
                                        </div>
                                    </div>
                                    <div class="overview-card remaining">
                                        <div class="overview-icon">
                                            <i class="fas fa-clock"></i>
                                        </div>
                                        <div class="overview-content">
                                            <span class="overview-label">Remaining</span>
                                            <span class="overview-value" id="remainingAmount"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="payment-progress-section">
                                    <div class="progress-header">
                                        <span class="progress-label">Payment Progress</span>
                                        <span class="progress-percentage" id="progressPercentage">0%</span>
                                    </div>
                                    <div class="payment-progress">
                                        <div id="paymentProgress" class="payment-progress-bar"></div>
                                    </div>
                                    <div class="progress-status" id="progressStatus">No payments made</div>
                                </div>
                            </div>
                        </div>

                        <div class="payment-history-section">
                            <div class="history-header">
                                <h3><i class="fas fa-history"></i> Payment History</h3>
                                <div class="history-stats">
                                    <span class="stat-item">
                                        <i class="fas fa-list"></i>
                                        <span id="paymentCount">0</span> payments
                                    </span>
                                </div>
                            </div>

                            <div class="payment-history-content">
                                <table class="payment-history-table" id="paymentHistoryTable">
                                    <thead>
                                        <tr>
                                            <th><i class="fas fa-calendar"></i> Date & Time</th>
                                            <th><i class="fas fa-exchange-alt"></i> Type</th>
                                            <th><i class="fas fa-credit-card"></i> Payment Mode</th>
                                            <th><i class="fas fa-rupee-sign"></i> Amount</th>
                                            <th><i class="fas fa-sticky-note"></i> Notes</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Payment history rows will be dynamically added here -->
                                    </tbody>
                                </table>

                                <div class="no-payments" id="noPayments">
                                    <div class="no-payments-icon">
                                        <i class="fas fa-inbox"></i>
                                    </div>
                                    <h4>No Payments Found</h4>
                                    <p>No payment records have been made for this examination yet.</p>
                                </div>
                            </div>
                        </div>
                        </div>
                        </div>

                        <script>
                            let currentExaminationId = null;
                            let currentPatient = null;

                            function handleSearch() {
                                const registrationCode = document.getElementById('registrationCode').value.trim();
                                if (!registrationCode) {
                                    alert('Please enter a registration code');
                                    return;
                                }



                                searchPatient(registrationCode);
                            }

                            // Also handle Enter key press
                            document.getElementById('registrationCode').addEventListener('keypress', function (e) {
                                if (e.key === 'Enter') {
                                    e.preventDefault();
                                    handleSearch();
                                }
                            });

                            function searchPatient(registrationCode) {
                                // Show loading state
                                const searchBtn = document.querySelector('.search-btn');
                                const originalText = searchBtn.innerHTML;
                                searchBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Searching...';
                                searchBtn.disabled = true;

                                fetch('${pageContext.request.contextPath}/payments/search-patient?registrationCode=' + encodeURIComponent(registrationCode))
                                    .then(response => response.json())
                                    .then(data => {
                                        console.log('Search response:', data);
                                        if (data.success) {
                                            displayPatientInfo(data.patient);
                                            displayExaminations(data.examinations);
                                        } else {
                                            alert('Patient not found: ' + data.message);
                                            // Hide patient info if search fails
                                            document.getElementById('patientInfo').classList.remove('show');
                                            document.getElementById('examinationsSection').style.display = 'none';
                                            document.getElementById('noRecords').style.display = 'block';
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        alert('Error searching for patient');
                                    })
                                    .finally(() => {
                                        // Restore button state
                                        searchBtn.innerHTML = originalText;
                                        searchBtn.disabled = false;
                                    });
                            }

                            function displayPatientInfo(patient) {
                                console.log('Displaying patient info:', patient);

                                currentPatient = patient;
                                document.getElementById('patientName').textContent = patient.firstName + ' ' + patient.lastName;
                                document.getElementById('patientMeta').innerHTML =
                                    '<span><i class="fas fa-id-card"></i> ' + patient.registrationCode + '</span>' +
                                    '<span><i class="fas fa-phone"></i> ' + patient.phoneNumber + '</span>' +
                                    '<span><i class="fas fa-birthday-cake"></i> Age: ' + patient.age + '</span>';
                                document.getElementById('patientInfo').classList.add('show');
                            }

                            function updatePatientSummary(examinations) {
                                let totalExaminations = examinations.length;
                                let totalAmount = 0;
                                let totalPaid = 0;
                                let totalPending = 0;

                                examinations.forEach(exam => {
                                    totalAmount += exam.totalProcedureAmount || 0;
                                    totalPaid += exam.netPaidAmount || 0;
                                    totalPending += exam.remainingAmount || 0;
                                });

                                document.getElementById('totalExaminations').textContent = totalExaminations;
                                document.getElementById('totalAmount').textContent = '₹' + totalAmount.toLocaleString();
                                document.getElementById('paidAmountSummary').textContent = '₹' + totalPaid.toLocaleString();
                                document.getElementById('pendingAmountSummary').textContent = '₹' + totalPending.toLocaleString();

                                // Show the summary section
                                document.getElementById('patientSummary').style.display = 'block';
                            }

                            // Enhanced Analytics and Filter Functions
                            let isSelectMode = false;
                            let selectedExaminations = new Set();
                            let currentAnalyticsData = null;

                            function toggleAnalytics() {
                                const dashboard = document.getElementById('analyticsDashboard');
                                const button = document.querySelector('button[onclick="toggleAnalytics()"]');

                                if (dashboard.style.display === 'none') {
                                    dashboard.style.display = 'block';
                                    button.innerHTML = '<i class="fas fa-eye-slash"></i> Hide Analytics';
                                    loadAnalyticsData();
                                } else {
                                    dashboard.style.display = 'none';
                                    button.innerHTML = '<i class="fas fa-chart-bar"></i> Show Analytics';
                                }
                            }

                            function loadAnalyticsData() {
                                // Simulate analytics data loading
                                const totalRevenue = Math.floor(Math.random() * 500000) + 100000;
                                const pendingAmount = Math.floor(Math.random() * 50000) + 10000;
                                const collectionRate = Math.floor(Math.random() * 30) + 70;
                                const avgPayment = Math.floor(Math.random() * 5000) + 2000;

                                document.getElementById('totalRevenue').textContent = '₹' + totalRevenue.toLocaleString();
                                document.getElementById('pendingAmount').textContent = '₹' + pendingAmount.toLocaleString();
                                document.getElementById('collectionRate').textContent = collectionRate + '%';
                                document.getElementById('avgPayment').textContent = '₹' + avgPayment.toLocaleString();

                                // Update change indicators
                                document.getElementById('revenueChange').textContent = '+12.5%';
                                document.getElementById('pendingChange').textContent = '23 patients';
                                document.getElementById('collectionTrend').textContent = 'Improving';
                                document.getElementById('paymentTrend').textContent = 'Per transaction';
                            }

                            function applyQuickFilter(filterType) {
                                const today = new Date();
                                const startDateInput = document.getElementById('startDate');
                                const endDateInput = document.getElementById('endDate');
                                const statusSelect = document.getElementById('paymentStatus');

                                switch (filterType) {
                                    case 'today':
                                        const todayStr = today.toISOString().split('T')[0];
                                        startDateInput.value = todayStr;
                                        endDateInput.value = todayStr;
                                        break;
                                    case 'week':
                                        const weekStart = new Date(today.setDate(today.getDate() - today.getDay()));
                                        const weekEnd = new Date(today.setDate(today.getDate() - today.getDay() + 6));
                                        startDateInput.value = weekStart.toISOString().split('T')[0];
                                        endDateInput.value = weekEnd.toISOString().split('T')[0];
                                        break;
                                    case 'month':
                                        const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);
                                        const monthEnd = new Date(today.getFullYear(), today.getMonth() + 1, 0);
                                        startDateInput.value = monthStart.toISOString().split('T')[0];
                                        endDateInput.value = monthEnd.toISOString().split('T')[0];
                                        break;
                                    case 'pending':
                                        statusSelect.value = 'pending';
                                        break;
                                    case 'completed':
                                        statusSelect.value = 'completed';
                                        break;
                                }

                                // Apply the filter by refreshing current patient data
                                if (currentPatient) {
                                    searchPatient(currentPatient.registrationCode);
                                }
                            }

                            function clearAllFilters() {
                                document.getElementById('paymentFilterForm').reset();
                                // Refresh examinations if patient is loaded
                                if (currentPatient) {
                                    searchPatient(currentPatient.registrationCode);
                                }
                            }

                            // Export Functions
                            function exportPaymentData() {
                                document.getElementById('exportModal').classList.add('show');
                                document.getElementById('overlay').classList.add('show');
                            }

                            function hideExportModal() {
                                document.getElementById('exportModal').classList.remove('show');
                                document.getElementById('overlay').classList.remove('show');
                            }

                            function performExport() {
                                const selectedFormat = document.querySelector('.export-option.selected');
                                if (!selectedFormat) {
                                    alert('Please select an export format');
                                    return;
                                }

                                const format = selectedFormat.dataset.format;
                                const includeHistory = document.getElementById('includePaymentHistory').checked;
                                const includePatient = document.getElementById('includePatientInfo').checked;
                                const includeSummary = document.getElementById('includeSummary').checked;

                                // Simulate export process
                                alert(`Exporting data in ${format.toUpperCase()} format...\\n\\nOptions:\\n- Payment History: ${includeHistory ? 'Yes' : 'No'}\\n- Patient Info: ${includePatient ? 'Yes' : 'No'}\\n- Summary: ${includeSummary ? 'Yes' : 'No'}`);

                                hideExportModal();
                            }

                            // Bulk Operations Functions
                            function toggleSelectMode() {
                                isSelectMode = !isSelectMode;
                                const button = document.querySelector('button[onclick="toggleSelectMode()"]');
                                const selectModeText = document.getElementById('selectModeText');
                                const bulkOperations = document.getElementById('bulkOperations');

                                if (isSelectMode) {
                                    button.innerHTML = '<i class="fas fa-times"></i> Exit Select';
                                    selectModeText.textContent = 'Exit Select';
                                    bulkOperations.classList.add('show');
                                    addCheckboxesToCards();
                                } else {
                                    button.innerHTML = '<i class="fas fa-check-square"></i> Select Mode';
                                    selectModeText.textContent = 'Select Mode';
                                    bulkOperations.classList.remove('show');
                                    removeCheckboxesFromCards();
                                    clearSelection();
                                }
                            }

                            function addCheckboxesToCards() {
                                const cards = document.querySelectorAll('.examination-card');
                                cards.forEach(card => {
                                    if (!card.querySelector('.examination-checkbox')) {
                                        const checkbox = document.createElement('input');
                                        checkbox.type = 'checkbox';
                                        checkbox.className = 'examination-checkbox';
                                        checkbox.addEventListener('change', handleCardSelection);
                                        card.appendChild(checkbox);
                                    }
                                });
                            }

                            function removeCheckboxesFromCards() {
                                const checkboxes = document.querySelectorAll('.examination-checkbox');
                                checkboxes.forEach(checkbox => checkbox.remove());
                            }

                            function handleCardSelection(event) {
                                const card = event.target.closest('.examination-card');
                                const examinationId = card.dataset.examinationId;

                                if (event.target.checked) {
                                    selectedExaminations.add(examinationId);
                                    card.classList.add('selected');
                                } else {
                                    selectedExaminations.delete(examinationId);
                                    card.classList.remove('selected');
                                }

                                updateSelectedCount();
                            }

                            function updateSelectedCount() {
                                document.getElementById('selectedCount').textContent = selectedExaminations.size;
                            }

                            function clearSelection() {
                                selectedExaminations.clear();
                                document.querySelectorAll('.examination-card.selected').forEach(card => {
                                    card.classList.remove('selected');
                                });
                                document.querySelectorAll('.examination-checkbox:checked').forEach(checkbox => {
                                    checkbox.checked = false;
                                });
                                updateSelectedCount();
                            }

                            function refreshExaminations() {
                                if (currentPatient && currentPatient.registrationCode) {
                                    searchPatient(currentPatient.registrationCode);
                                } else {
                                    loadTodayPendingPayments();
                                }
                            }

                            function bulkCollectPayment() {
                                if (selectedExaminations.size === 0) {
                                    alert('Please select examinations first');
                                    return;
                                }
                                alert(`Bulk payment collection for ${selectedExaminations.size} examinations`);
                            }

                            function bulkExportSelected() {
                                if (selectedExaminations.size === 0) {
                                    alert('Please select examinations first');
                                    return;
                                }
                                exportPaymentData();
                            }

                            function bulkSendReminders() {
                                if (selectedExaminations.size === 0) {
                                    alert('Please select examinations first');
                                    return;
                                }
                                alert(`Sending payment reminders for ${selectedExaminations.size} examinations`);
                            }

                            function displayExaminations(examinations) {
                                const grid = document.getElementById('examinationsGrid');
                                const section = document.getElementById('examinationsSection');
                                const noRecords = document.getElementById('noRecords');

                                if (examinations.length === 0) {
                                    section.style.display = 'none';
                                    noRecords.style.display = 'block';
                                    noRecords.innerHTML = '<i class="fas fa-info-circle"></i><p>No examinations found for this patient.</p>';
                                    return;
                                }

                                section.style.display = 'block';
                                noRecords.style.display = 'none';

                                grid.innerHTML = examinations.map(exam => {
                                    const totalPaid = exam.totalPaidAmount || 0;
                                    const totalRefunded = exam.totalRefunded || 0;
                                    const netPaid = exam.netPaidAmount || 0;
                                    const remaining = exam.remainingAmount || 0;
                                    const status = exam.paymentStatus || 'PENDING';
                                    const paymentCount = exam.paymentCount || 0;

                                    // Determine action buttons based on status
                                    let actionButton = '';
                                    if (remaining > 0) {
                                        actionButton = '<button class="btn btn-success" onclick="showPaymentForm(' + exam.id + ', ' + remaining + ')">' +
                                            '<i class="fas fa-money-bill-wave"></i>' +
                                            'Collect Payment' +
                                            '</button>';
                                    } else if (status === 'COMPLETED') {
                                        actionButton = '<span class="btn btn-secondary" style="cursor: default;">' +
                                            '<i class="fas fa-check"></i>' +
                                            'Payment Complete' +
                                            '</span>';
                                    } else if (status === 'NO_CHARGE') {
                                        actionButton = '<span class="btn btn-light" style="cursor: default;">' +
                                            '<i class="fas fa-gift"></i>' +
                                            'No Charge' +
                                            '</span>';
                                    }

                                    // Payment history button - always show if there are payments
                                    let historyButton = '';
                                    if (paymentCount > 0) {
                                        historyButton = '<button class="btn btn-info" onclick="viewPaymentHistory(' + exam.id + ')">' +
                                            '<i class="fas fa-history"></i>' +
                                            'Payment History (' + paymentCount + ')' +
                                            '</button>';
                                    } else {
                                        historyButton = '<button class="btn btn-outline-info" onclick="viewPaymentHistory(' + exam.id + ')">' +
                                            '<i class="fas fa-history"></i>' +
                                            'Payment History' +
                                            '</button>';
                                    }

                                    // Enhanced examination card with comprehensive payment info
                                    return '<div class="examination-card" data-examination-id="' + exam.id + '">' +
                                        '<div class="examination-header">' +
                                        '<div class="examination-title">' +
                                        'Tooth ' + exam.toothNumber + ' - ' + (exam.procedure ? exam.procedure.procedureName : 'No Procedure') +
                                        '</div>' +
                                        '<span class="payment-status status-' + status.toLowerCase() + '">' + getStatusDisplayName(status) + '</span>' +
                                        '</div>' +
                                        '<div class="examination-details">' +
                                        '<div class="detail-row">' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-calendar"></i> Date:</span>' +
                                        '<span class="detail-value">' + formatDate(exam.examinationDate) + '</span>' +
                                        '</div>' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-file-invoice-dollar"></i> Total:</span>' +
                                        '<span class="detail-value">₹' + (exam.totalProcedureAmount || 0) + '</span>' +
                                        '</div>' +
                                        '</div>' +
                                        '<div class="detail-row">' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-check-circle"></i> Paid:</span>' +
                                        '<span class="detail-value text-success">₹' + totalPaid + '</span>' +
                                        '</div>' +
                                        (totalRefunded > 0 ?
                                            '<div class="detail-item">' +
                                            '<span class="detail-label"><i class="fas fa-undo"></i> Refunded:</span>' +
                                            '<span class="detail-value text-danger">₹' + totalRefunded + '</span>' +
                                            '</div>' : '') +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-calculator"></i> Net:</span>' +
                                        '<span class="detail-value">₹' + netPaid + '</span>' +
                                        '</div>' +
                                        '</div>' +
                                        '<div class="detail-row">' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-clock"></i> Remaining:</span>' +
                                        '<span class="detail-value ' + (remaining > 0 ? 'text-warning' : 'text-success') + '">₹' + remaining + '</span>' +
                                        '</div>' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-receipt"></i> Transactions:</span>' +
                                        '<span class="detail-value">' + paymentCount + '</span>' +
                                        '</div>' +
                                        '</div>' +
                                        '</div>' +
                                        '<div class="payment-actions">' +
                                        actionButton +
                                        historyButton +
                                        '</div>' +
                                        '</div>';
                                }).join('');

                                // Add checkboxes if in select mode
                                if (isSelectMode) {
                                    addCheckboxesToCards();
                                }

                                // Update patient summary when examinations are displayed
                                if (examinations.length > 0) {
                                    updatePatientSummary(examinations);
                                }
                            }

                            // Helper functions
                            function getStatusDisplayName(status) {
                                switch (status) {
                                    case 'PENDING': return 'Pending';
                                    case 'PARTIAL': return 'Partial';
                                    case 'COMPLETED': return 'Completed';
                                    case 'NO_CHARGE': return 'No Charge';
                                    default: return status;
                                }
                            }

                            function formatDate(dateString) {
                                if (!dateString) return 'N/A';
                                const date = new Date(dateString);
                                return date.toLocaleDateString('en-IN');
                            }

                            // Event listeners for export modal
                            document.addEventListener('click', function (e) {
                                if (e.target.closest('.export-option')) {
                                    document.querySelectorAll('.export-option').forEach(option => {
                                        option.classList.remove('selected');
                                    });
                                    e.target.closest('.export-option').classList.add('selected');
                                }
                            });

                            function displayExaminations(examinations) {
                                const grid = document.getElementById('examinationsGrid');
                                const section = document.getElementById('examinationsSection');
                                const noRecords = document.getElementById('noRecords');

                                if (examinations.length === 0) {
                                    section.style.display = 'none';
                                    noRecords.style.display = 'block';
                                    noRecords.innerHTML = '<i class="fas fa-info-circle"></i><p>No examinations found for this patient.</p>';
                                    return;
                                }

                                section.style.display = 'block';
                                noRecords.style.display = 'none';

                                grid.innerHTML = examinations.map(exam => {
                                    const totalPaid = exam.totalPaidAmount || 0;
                                    const totalRefunded = exam.totalRefunded || 0;
                                    const netPaid = exam.netPaidAmount || 0;
                                    const remaining = exam.remainingAmount || 0;
                                    const status = exam.paymentStatus || 'PENDING';
                                    const paymentCount = exam.paymentCount || 0;

                                    // Determine action buttons based on status
                                    let actionButton = '';
                                    if (remaining > 0) {
                                        actionButton = '<button class="btn btn-success" onclick="showPaymentForm(' + exam.id + ', ' + remaining + ')">' +
                                            '<i class="fas fa-money-bill-wave"></i>' +
                                            'Collect Payment' +
                                            '</button>';
                                    } else if (status === 'COMPLETED') {
                                        actionButton = '<span class="btn btn-secondary" style="cursor: default;">' +
                                            '<i class="fas fa-check"></i>' +
                                            'Payment Complete' +
                                            '</span>';
                                    } else if (status === 'NO_CHARGE') {
                                        actionButton = '<span class="btn btn-light" style="cursor: default;">' +
                                            '<i class="fas fa-gift"></i>' +
                                            'No Charge' +
                                            '</span>';
                                    }

                                    // Payment history button - always show if there are payments
                                    let historyButton = '';
                                    if (paymentCount > 0) {
                                        historyButton = '<button class="btn btn-info" onclick="viewPaymentHistory(' + exam.id + ')">' +
                                            '<i class="fas fa-history"></i>' +
                                            'Payment History (' + paymentCount + ')' +
                                            '</button>';
                                    } else {
                                        historyButton = '<button class="btn btn-outline-info" onclick="viewPaymentHistory(' + exam.id + ')">' +
                                            '<i class="fas fa-history"></i>' +
                                            'Payment History' +
                                            '</button>';
                                    }

                                    // Enhanced examination card with comprehensive payment info
                                    return '<div class="examination-card">' +
                                        '<div class="examination-header">' +
                                        '<div class="examination-title">' +
                                        'Tooth ' + exam.toothNumber + ' - ' + (exam.procedure ? exam.procedure.procedureName : 'No Procedure') +
                                        '</div>' +
                                        '<span class="payment-status status-' + status.toLowerCase() + '">' + getStatusDisplayName(status) + '</span>' +
                                        '</div>' +
                                        '<div class="examination-details">' +
                                        '<div class="detail-row">' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-calendar"></i> Date:</span>' +
                                        '<span class="detail-value">' + formatDate(exam.examinationDate) + '</span>' +
                                        '</div>' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-file-invoice-dollar"></i> Total:</span>' +
                                        '<span class="detail-value">₹' + (exam.totalProcedureAmount || 0) + '</span>' +
                                        '</div>' +
                                        '</div>' +
                                        '<div class="detail-row">' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-check-circle"></i> Paid:</span>' +
                                        '<span class="detail-value text-success">₹' + totalPaid + '</span>' +
                                        '</div>' +
                                        (totalRefunded > 0 ?
                                            '<div class="detail-item">' +
                                            '<span class="detail-label"><i class="fas fa-undo"></i> Refunded:</span>' +
                                            '<span class="detail-value text-danger">₹' + totalRefunded + '</span>' +
                                            '</div>' :
                                            '<div class="detail-item">' +
                                            '<span class="detail-label"><i class="fas fa-calculator"></i> Net:</span>' +
                                            '<span class="detail-value">₹' + netPaid + '</span>' +
                                            '</div>'
                                        ) +
                                        '</div>' +
                                        '<div class="detail-row">' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-hourglass-half"></i> Remaining:</span>' +
                                        '<span class="detail-value ' + (remaining > 0 ? 'text-warning' : 'text-success') + '">₹' + Math.abs(remaining) + '</span>' +
                                        '</div>' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-receipt"></i> Transactions:</span>' +
                                        '<span class="detail-value">' + paymentCount + '</span>' +
                                        '</div>' +
                                        '</div>' +
                                        '</div>' +
                                        '<div class="payment-actions">' +
                                        actionButton +
                                        historyButton +
                                        '</div>' +
                                        '</div>';
                                }).join('');
                            }

                            function getPaymentStatus(remaining, total) {
                                if (remaining <= 0) return 'COMPLETED';
                                if (remaining < total) return 'PARTIAL';
                                return 'PENDING';
                            }

                            function getStatusDisplayName(status) {
                                switch (status) {
                                    case 'COMPLETED': return 'Completed';
                                    case 'PARTIAL': return 'Partial';
                                    case 'PENDING': return 'Pending';
                                    case 'NO_CHARGE': return 'No Charge';
                                    default: return status;
                                }
                            }

                            function formatDate(dateString) {
                                if (!dateString) {
                                    return 'N/A';
                                }

                                console.log('Raw date string:', dateString, 'Type:', typeof dateString);

                                let date;

                                // If it's already a Date object
                                if (dateString instanceof Date) {
                                    date = dateString;
                                } else if (typeof dateString === 'string') {
                                    // Handle different date formats
                                    if (dateString.includes('T') && dateString.includes('Z')) {
                                        // ISO format with UTC: "2024-01-15T10:30:00Z"
                                        date = new Date(dateString);
                                    } else if (dateString.includes('T')) {
                                        // ISO format without timezone: "2024-01-15T10:30:00"
                                        date = new Date(dateString);
                                    } else if (dateString.includes('-') && dateString.includes(':')) {
                                        // Format: "2024-01-15 10:30:00" (IST format from server)
                                        date = new Date(dateString.replace(' ', 'T'));
                                    } else {
                                        // Try direct parsing
                                        date = new Date(dateString);
                                    }
                                } else {
                                    // Try direct parsing for other types
                                    date = new Date(dateString);
                                }

                                console.log('Parsed date object:', date);
                                console.log('Is valid date:', !isNaN(date.getTime()));

                                // Check if date is valid
                                if (isNaN(date.getTime())) {
                                    console.error('Invalid date string:', dateString);
                                    return 'Invalid Date';
                                }

                                // Since the date is already in IST, use it directly
                                console.log('Using date directly:', date);

                                // Format as DD/MM/YYYY HH:MM AM/PM
                                const day = date.getDate();
                                const month = date.getMonth() + 1;
                                const year = date.getFullYear();
                                const hours = date.getHours();
                                const minutes = date.getMinutes();

                                console.log('Raw extracted values:', {
                                    day: day,
                                    month: month,
                                    year: year,
                                    hours: hours,
                                    minutes: minutes
                                });

                                // Check for NaN values
                                if (isNaN(day) || isNaN(month) || isNaN(year) || isNaN(hours) || isNaN(minutes)) {
                                    console.error('NaN values detected in date extraction');
                                    return 'Invalid Date';
                                }

                                const dayStr = String(day).padStart(2, '0');
                                const monthStr = String(month).padStart(2, '0');
                                const yearStr = String(year);
                                const minutesStr = String(minutes).padStart(2, '0');
                                const ampm = hours >= 12 ? 'PM' : 'AM';
                                const displayHours = hours % 12 || 12;

                                console.log('Formatted values:', {
                                    dayStr: dayStr,
                                    monthStr: monthStr,
                                    yearStr: yearStr,
                                    minutesStr: minutesStr,
                                    ampm: ampm,
                                    displayHours: displayHours
                                });

                                const result = dayStr + '/' + monthStr + '/' + yearStr + ' ' + displayHours + ':' + minutesStr + ' ' + ampm;
                                console.log('Final formatted result:', result);

                                return result;
                            }

                            function showPaymentFormFromToday(examinationId, remainingAmount, patientInfo) {
                                showPaymentForm(examinationId, remainingAmount, patientInfo);
                            }

                            function showPaymentForm(examinationId, remainingAmount, patientInfo = null) {
                                currentExaminationId = examinationId;

                                // If patientInfo is provided (from today's pending payments), use it
                                // Otherwise, use the currentPatient from search
                                const patient = patientInfo || currentPatient;

                                if (!patient) {
                                    alert('Patient information not available');
                                    return;
                                }

                                document.getElementById('paymentSummary').innerHTML =
                                    '<div class="summary-row">' +
                                    '<span class="summary-label">Patient</span>' +
                                    '<span class="summary-value">' + patient.firstName + ' ' + patient.lastName + '</span>' +
                                    '</div>' +
                                    '<div class="summary-row">' +
                                    '<span class="summary-label">Registration Code</span>' +
                                    '<span class="summary-value">' + patient.registrationCode + '</span>' +
                                    '</div>' +
                                    '<div class="summary-row">' +
                                    '<span class="summary-label">Remaining Amount</span>' +
                                    '<span class="summary-value">₹' + remainingAmount + '</span>' +
                                    '</div>';

                                const amountInput = document.querySelector('input[name="paymentAmount"]');
                                const amountError = document.getElementById('amountError');

                                // Clear previous validation states
                                amountInput.classList.remove('error', 'valid');
                                amountError.classList.remove('show');
                                amountError.textContent = '';

                                // Set max value and placeholder
                                amountInput.max = remainingAmount;
                                amountInput.placeholder = 'Enter amount (max ₹' + remainingAmount + ')';

                                // Add validation event listeners
                                amountInput.addEventListener('input', function () {
                                    validatePaymentAmount(this, remainingAmount);
                                });

                                amountInput.addEventListener('blur', function () {
                                    validatePaymentAmount(this, remainingAmount);
                                });

                                document.getElementById('overlay').classList.add('show');
                                document.getElementById('paymentForm').classList.add('show');
                            }

                            function validatePaymentAmount(input, maxAmount) {
                                const amount = parseFloat(input.value) || 0;
                                const amountError = document.getElementById('amountError');

                                // Clear previous states
                                input.classList.remove('error', 'valid');
                                amountError.classList.remove('show');
                                amountError.textContent = '';

                                if (amount <= 0) {
                                    input.classList.add('error');
                                    amountError.textContent = 'Please enter a valid amount greater than 0';
                                    amountError.classList.add('show');
                                    return false;
                                } else if (amount > maxAmount) {
                                    input.classList.add('error');
                                    amountError.textContent = 'Amount cannot exceed remaining amount of ₹' + maxAmount;
                                    amountError.classList.add('show');
                                    return false;
                                } else {
                                    input.classList.add('valid');
                                    return true;
                                }
                            }

                            function hidePaymentForm() {
                                document.getElementById('overlay').classList.remove('show');
                                document.getElementById('paymentForm').classList.remove('show');
                                currentExaminationId = null;
                            }

                            function collectPayment() {
                                const form = document.getElementById('paymentForm');
                                const paymentMode = form.querySelector('select[name="paymentMode"]').value;
                                const amountInput = form.querySelector('input[name="paymentAmount"]');
                                const amount = parseFloat(amountInput.value);
                                const notes = form.querySelector('textarea[name="paymentNotes"]').value;

                                // Validate payment mode
                                if (!paymentMode) {
                                    alert('Please select a payment mode.');
                                    return;
                                }

                                // Validate payment amount
                                if (!amount || amount <= 0) {
                                    alert('Please enter a valid payment amount.');
                                    amountInput.focus();
                                    return;
                                }

                                // Get the remaining amount from the payment summary
                                const summaryText = document.getElementById('paymentSummary').textContent;
                                const remainingMatch = summaryText.match(/₹(\d+(?:\.\d{2})?)/);
                                const remainingAmount = remainingMatch ? parseFloat(remainingMatch[1]) : 0;

                                // Validate against remaining amount
                                if (amount > remainingAmount) {
                                    alert('Payment amount cannot exceed the remaining amount of ₹' + remainingAmount);
                                    amountInput.focus();
                                    return;
                                }

                                const requestData = {
                                    examinationId: currentExaminationId,
                                    paymentMode: paymentMode,
                                    notes: notes,
                                    paymentDetails: {
                                        amount: amount
                                    }
                                };

                                fetch('${pageContext.request.contextPath}/payments/collect', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'X-CSRF-TOKEN': document.querySelector("meta[name='_csrf']").content
                                    },
                                    body: JSON.stringify(requestData)
                                })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            alert('Payment collected successfully!');
                                            hidePaymentForm();

                                            // Refresh the patient data if we have currentPatient (from search)
                                            if (currentPatient && currentPatient.registrationCode) {
                                                searchPatient(currentPatient.registrationCode);
                                            }

                                            // Refresh today's pending payments
                                            loadTodayPendingPayments();
                                        } else {
                                            alert('Error: ' + data.message);
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        alert('Error collecting payment');
                                    });
                            }

                            // Close modal when clicking overlay
                            document.getElementById('overlay').addEventListener('click', hidePaymentForm);

                            // Payment History Functions (New functionality)
                            function viewPaymentHistory(examinationId) {
                                console.log('Loading payment history for examination:', examinationId);

                                // Show the modal first
                                document.getElementById('paymentHistoryModal').classList.add('show');

                                // Load payment history data
                                fetch('${pageContext.request.contextPath}/payments/payment-history/' + examinationId)
                                    .then(response => response.json())
                                    .then(data => {
                                        console.log('Payment history response:', data);
                                        if (data.success) {
                                            displayPaymentHistory(data);
                                        } else {
                                            alert('Error: ' + data.message);
                                            hidePaymentHistory();
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        alert('Error loading payment history');
                                        hidePaymentHistory();
                                    });
                            }

                            function displayPaymentHistory(data) {
                                const examination = data.examination;
                                const payments = data.payments;
                                const summary = data.summary;

                                // Update examination summary
                                document.getElementById('examinationDate').textContent = formatDate(examination.examinationDate);
                                document.getElementById('clinicName').textContent = examination.clinic ? examination.clinic.clinicName : 'N/A';
                                document.getElementById('toothNumber').textContent = examination.toothNumber || 'N/A';
                                document.getElementById('procedureName').textContent = examination.procedure ? examination.procedure.procedureName : 'No Procedure';

                                // Update payment overview
                                document.getElementById('totalAmount').textContent = '₹' + (examination.totalProcedureAmount || 0);
                                document.getElementById('paidAmount').textContent = '₹' + summary.totalPaid;
                                document.getElementById('remainingAmount').textContent = '₹' + summary.remaining;

                                // Update progress bar and status
                                const progressPercentage = examination.totalProcedureAmount > 0 ?
                                    Math.round((summary.totalPaid / examination.totalProcedureAmount) * 100) : 0;
                                document.getElementById('paymentProgress').style.width = progressPercentage + '%';
                                document.getElementById('progressPercentage').textContent = progressPercentage + '%';

                                // Update progress status
                                let statusText = '';
                                let statusColor = '';
                                if (progressPercentage === 0) {
                                    statusText = 'No payments made yet';
                                    statusColor = '#e74c3c';
                                } else if (progressPercentage === 100) {
                                    statusText = 'Payment completed';
                                    statusColor = '#27ae60';
                                } else if (progressPercentage >= 50) {
                                    statusText = 'Payment partially completed';
                                    statusColor = '#f39c12';
                                } else {
                                    statusText = 'Payment in progress';
                                    statusColor = '#3498db';
                                }

                                const progressStatus = document.getElementById('progressStatus');
                                progressStatus.textContent = statusText;
                                progressStatus.style.color = statusColor;

                                // Update payment count
                                document.getElementById('paymentCount').textContent = payments.length;

                                // Update payment history table
                                const tableBody = document.getElementById('paymentHistoryTable');
                                const noPayments = document.getElementById('noPayments');

                                if (payments.length === 0) {
                                    tableBody.innerHTML = '';
                                    noPayments.style.display = 'block';
                                } else {
                                    noPayments.style.display = 'none';
                                    tableBody.innerHTML = payments.map(payment => {
                                        const paymentModeClass = 'payment-mode-' + payment.paymentMode.toLowerCase().replace('_', '-');
                                        const transactionTypeClass = 'transaction-type-' + (payment.transactionType || 'CAPTURE').toLowerCase();
                                        const paymentDate = formatDate(payment.paymentDate);
                                        const paymentAmount = '₹' + payment.amount;
                                        const paymentNotes = payment.notes || '-';
                                        const transactionType = payment.transactionType || 'CAPTURE';

                                        return '<tr>' +
                                            '<td>' + paymentDate + '</td>' +
                                            '<td><span class="transaction-type-badge ' + transactionTypeClass + '">' + transactionType + '</span></td>' +
                                            '<td><span class="payment-mode-badge ' + paymentModeClass + '">' + payment.paymentMode + '</span></td>' +
                                            '<td><strong>' + paymentAmount + '</strong></td>' +
                                            '<td>' + paymentNotes + '</td>' +
                                            '</tr>';
                                    }).join('');
                                }
                            }

                            function hidePaymentHistory() {
                                document.getElementById('paymentHistoryModal').classList.remove('show');
                            }

                            // Close payment history modal when clicking outside
                            document.getElementById('paymentHistoryModal').addEventListener('click', function (e) {
                                if (e.target === this) {
                                    hidePaymentHistory();
                                }
                            });

                            // Close payment history modal with ESC key
                            document.addEventListener('keydown', function (e) {
                                if (e.key === 'Escape') {
                                    hidePaymentHistory();
                                }
                            });

                            // Today's Pending Payments Functions
                            function loadTodayPendingPayments() {
                                $.ajax({
                                    url: '/payments/today-pending',
                                    method: 'GET',
                                    success: function (response) {
                                        if (response.success) {
                                            const examinations = response.examinations || [];
                                            const tbody = $('#todayPendingTable tbody');
                                            tbody.empty();

                                            if (examinations.length === 0) {
                                                tbody.append('<tr><td colspan="9" class="text-center">No pending payments for today</td></tr>');
                                            } else {
                                                examinations.forEach(function (exam) {
                                                    const row = '<tr>' +
                                                        '<td><a href="${pageContext.request.contextPath}/patients/examination/' + exam.id + '" class="examination-id-link"><span class="examination-id">' + exam.id + '</span></a></td>' +
                                                        '<td>' + (exam.patient ? exam.patient.registrationCode : 'N/A') + '</td>' +
                                                        '<td>' + (exam.patient ? exam.patient.firstName + ' ' + exam.patient.lastName : 'N/A') + '</td>' +
                                                        '<td>' + (exam.patient ? exam.patient.phoneNumber : 'N/A') + '</td>' +
                                                        '<td>' + (exam.procedure ? exam.procedure.procedureName : 'N/A') + '</td>' +
                                                        '<td>₹' + (exam.totalProcedureAmount || 0) + '</td>' +
                                                        '<td>₹' + (exam.totalPaidAmount || 0) + '</td>' +
                                                        '<td>₹' + (exam.remainingAmount || 0) + '</td>' +
                                                        '<td>' +
                                                        '<button class="btn btn-success collect-payment-btn" ' +
                                                        'data-examination-id="' + exam.id + '" ' +
                                                        'data-remaining-amount="' + exam.remainingAmount + '" ' +
                                                        'data-patient-firstname="' + (exam.patient ? exam.patient.firstName : '') + '" ' +
                                                        'data-patient-lastname="' + (exam.patient ? exam.patient.lastName : '') + '" ' +
                                                        'data-patient-registration="' + (exam.patient ? exam.patient.registrationCode : '') + '" ' +
                                                        'data-patient-phone="' + (exam.patient ? exam.patient.phoneNumber : '') + '">' +
                                                        '<i class="fas fa-money-bill-wave"></i>' +
                                                        'Collect Payment' +
                                                        '</button>' +
                                                        '</td>' +
                                                        '</tr>';
                                                    tbody.append(row);
                                                });
                                            }
                                        } else {
                                            $('#todayPendingTable tbody').html('<tr><td colspan="9" class="text-center text-danger">Error loading data</td></tr>');
                                        }
                                    },
                                    error: function (xhr, status, error) {
                                        $('#todayPendingTable tbody').html('<tr><td colspan="9" class="text-center text-danger">Error loading data</td></tr>');
                                    }
                                });
                            }

                            // Enhanced Analytics and Filter Functions
                            let isSelectMode = false;
                            let selectedExaminations = new Set();
                            let currentAnalyticsData = null;

                            function toggleAnalytics() {
                                const dashboard = document.getElementById('analyticsDashboard');
                                const button = dashboard.previousElementSibling.querySelector('button[onclick="toggleAnalytics()"]');

                                if (dashboard.style.display === 'none') {
                                    dashboard.style.display = 'block';
                                    button.innerHTML = '<i class="fas fa-eye-slash"></i> Hide Analytics';
                                    loadAnalyticsData();
                                } else {
                                    dashboard.style.display = 'none';
                                    button.innerHTML = '<i class="fas fa-chart-bar"></i> Show Analytics';
                                }
                            }

                            function loadAnalyticsData() {
                                // Simulate analytics data loading
                                const totalRevenue = Math.floor(Math.random() * 500000) + 100000;
                                const pendingAmount = Math.floor(Math.random() * 50000) + 10000;
                                const collectionRate = Math.floor(Math.random() * 30) + 70;
                                const avgPayment = Math.floor(Math.random() * 5000) + 2000;

                                document.getElementById('totalRevenue').textContent = '₹' + totalRevenue.toLocaleString();
                                document.getElementById('pendingAmount').textContent = '₹' + pendingAmount.toLocaleString();
                                document.getElementById('collectionRate').textContent = collectionRate + '%';
                                document.getElementById('avgPayment').textContent = '₹' + avgPayment.toLocaleString();

                                // Update change indicators
                                document.getElementById('revenueChange').textContent = '+12.5%';
                                document.getElementById('pendingChange').textContent = '23 patients';
                                document.getElementById('collectionTrend').textContent = 'Improving';
                                document.getElementById('paymentTrend').textContent = 'Per transaction';
                            }

                            function applyQuickFilter(filterType) {
                                const today = new Date();
                                const startDateInput = document.getElementById('startDate');
                                const endDateInput = document.getElementById('endDate');
                                const statusSelect = document.getElementById('paymentStatus');

                                switch (filterType) {
                                    case 'today':
                                        const todayStr = today.toISOString().split('T')[0];
                                        startDateInput.value = todayStr;
                                        endDateInput.value = todayStr;
                                        break;
                                    case 'week':
                                        const weekStart = new Date(today.setDate(today.getDate() - today.getDay()));
                                        const weekEnd = new Date(today.setDate(today.getDate() - today.getDay() + 6));
                                        startDateInput.value = weekStart.toISOString().split('T')[0];
                                        endDateInput.value = weekEnd.toISOString().split('T')[0];
                                        break;
                                    case 'month':
                                        const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);
                                        const monthEnd = new Date(today.getFullYear(), today.getMonth() + 1, 0);
                                        startDateInput.value = monthStart.toISOString().split('T')[0];
                                        endDateInput.value = monthEnd.toISOString().split('T')[0];
                                        break;
                                    case 'pending':
                                        statusSelect.value = 'pending';
                                        break;
                                    case 'completed':
                                        statusSelect.value = 'completed';
                                        break;
                                }

                                // Apply the filter
                                document.getElementById('paymentFilterForm').dispatchEvent(new Event('submit'));
                            }

                            function clearAllFilters() {
                                document.getElementById('paymentFilterForm').reset();
                                // Refresh examinations if patient is loaded
                                if (currentPatient) {
                                    searchPatient(currentPatient.registrationCode);
                                }
                            }

                            function toggleSelectMode() {
                                isSelectMode = !isSelectMode;
                                const button = document.querySelector('button[onclick="toggleSelectMode()"]');
                                const selectModeText = document.getElementById('selectModeText');
                                const bulkOperations = document.getElementById('bulkOperations');

                                if (isSelectMode) {
                                    button.innerHTML = '<i class="fas fa-times"></i> Exit Select';
                                    selectModeText.textContent = 'Exit Select';
                                    bulkOperations.classList.add('show');
                                    addCheckboxesToCards();
                                } else {
                                    button.innerHTML = '<i class="fas fa-check-square"></i> Select Mode';
                                    selectModeText.textContent = 'Select Mode';
                                    bulkOperations.classList.remove('show');
                                    removeCheckboxesFromCards();
                                    clearSelection();
                                }
                            }

                            function addCheckboxesToCards() {
                                const cards = document.querySelectorAll('.examination-card');
                                cards.forEach(card => {
                                    if (!card.querySelector('.examination-checkbox')) {
                                        const checkbox = document.createElement('input');
                                        checkbox.type = 'checkbox';
                                        checkbox.className = 'examination-checkbox';
                                        checkbox.addEventListener('change', handleCardSelection);
                                        card.appendChild(checkbox);
                                    }
                                });
                            }

                            function removeCheckboxesFromCards() {
                                const checkboxes = document.querySelectorAll('.examination-checkbox');
                                checkboxes.forEach(checkbox => checkbox.remove());
                            }

                            function handleCardSelection(event) {
                                const card = event.target.closest('.examination-card');
                                const examinationId = card.dataset.examinationId;

                                if (event.target.checked) {
                                    selectedExaminations.add(examinationId);
                                    card.classList.add('selected');
                                } else {
                                    selectedExaminations.delete(examinationId);
                                    card.classList.remove('selected');
                                }

                                updateSelectedCount();
                            }

                            function updateSelectedCount() {
                                document.getElementById('selectedCount').textContent = selectedExaminations.size;
                            }

                            function clearSelection() {
                                selectedExaminations.clear();
                                document.querySelectorAll('.examination-card.selected').forEach(card => {
                                    card.classList.remove('selected');
                                });
                                document.querySelectorAll('.examination-checkbox:checked').forEach(checkbox => {
                                    checkbox.checked = false;
                                });
                                updateSelectedCount();
                            }

                            function refreshExaminations() {
                                if (currentPatient && currentPatient.registrationCode) {
                                    searchPatient(currentPatient.registrationCode);
                                } else {
                                    loadTodayPendingPayments();
                                }
                            }

                            // Export Functions
                            function exportPaymentData() {
                                document.getElementById('exportModal').classList.add('show');
                                document.getElementById('overlay').classList.add('show');
                            }

                            function hideExportModal() {
                                document.getElementById('exportModal').classList.remove('show');
                                document.getElementById('overlay').classList.remove('show');
                            }

                            function performExport() {
                                const selectedFormat = document.querySelector('.export-option.selected');
                                if (!selectedFormat) {
                                    alert('Please select an export format');
                                    return;
                                }

                                const format = selectedFormat.dataset.format;
                                const includeHistory = document.getElementById('includePaymentHistory').checked;
                                const includePatient = document.getElementById('includePatientInfo').checked;
                                const includeSummary = document.getElementById('includeSummary').checked;

                                // Simulate export process
                                alert(`Exporting data in ${format.toUpperCase()} format...\\n\\nOptions:\\n- Payment History: ${includeHistory ? 'Yes' : 'No'}\\n- Patient Info: ${includePatient ? 'Yes' : 'No'}\\n- Summary: ${includeSummary ? 'Yes' : 'No'}`);

                                hideExportModal();
                            }

                            // Bulk Operations
                            function bulkCollectPayment() {
                                if (selectedExaminations.size === 0) {
                                    alert('Please select examinations first');
                                    return;
                                }
                                alert(`Bulk payment collection for ${selectedExaminations.size} examinations`);
                            }

                            function bulkExportSelected() {
                                if (selectedExaminations.size === 0) {
                                    alert('Please select examinations first');
                                    return;
                                }
                                exportPaymentData();
                            }

                            function bulkSendReminders() {
                                if (selectedExaminations.size === 0) {
                                    alert('Please select examinations first');
                                    return;
                                }
                                alert(`Sending payment reminders for ${selectedExaminations.size} examinations`);
                            }

                            // Enhanced displayExaminations function to support new features
                            function displayExaminationsEnhanced(examinations) {
                                const grid = document.getElementById('examinationsGrid');
                                const section = document.getElementById('examinationsSection');
                                const noRecords = document.getElementById('noRecords');

                                if (examinations.length === 0) {
                                    section.style.display = 'none';
                                    noRecords.style.display = 'block';
                                    noRecords.innerHTML = '<i class="fas fa-info-circle"></i><p>No examinations found for this patient.</p>';
                                    return;
                                }

                                section.style.display = 'block';
                                noRecords.style.display = 'none';

                                grid.innerHTML = examinations.map(exam => {
                                    const totalPaid = exam.totalPaidAmount || 0;
                                    const totalRefunded = exam.totalRefunded || 0;
                                    const netPaid = exam.netPaidAmount || 0;
                                    const remaining = exam.remainingAmount || 0;
                                    const status = exam.paymentStatus || 'PENDING';
                                    const paymentCount = exam.paymentCount || 0;

                                    // Determine action buttons based on status
                                    let actionButton = '';
                                    if (remaining > 0) {
                                        actionButton = '<button class="btn btn-success" onclick="showPaymentForm(' + exam.id + ', ' + remaining + ')">' +
                                            '<i class="fas fa-money-bill-wave"></i>' +
                                            'Collect Payment' +
                                            '</button>';
                                    } else if (status === 'COMPLETED') {
                                        actionButton = '<span class="btn btn-secondary" style="cursor: default;">' +
                                            '<i class="fas fa-check"></i>' +
                                            'Payment Complete' +
                                            '</span>';
                                    } else if (status === 'NO_CHARGE') {
                                        actionButton = '<span class="btn btn-light" style="cursor: default;">' +
                                            '<i class="fas fa-gift"></i>' +
                                            'No Charge' +
                                            '</span>';
                                    }

                                    // Payment history button - always show if there are payments
                                    let historyButton = '';
                                    if (paymentCount > 0) {
                                        historyButton = '<button class="btn btn-info" onclick="viewPaymentHistory(' + exam.id + ')">' +
                                            '<i class="fas fa-history"></i>' +
                                            'Payment History (' + paymentCount + ')' +
                                            '</button>';
                                    } else {
                                        historyButton = '<button class="btn btn-outline-info" onclick="viewPaymentHistory(' + exam.id + ')">' +
                                            '<i class="fas fa-history"></i>' +
                                            'Payment History' +
                                            '</button>';
                                    }

                                    // Enhanced examination card with comprehensive payment info
                                    return '<div class="examination-card" data-examination-id="' + exam.id + '">' +
                                        '<div class="examination-header">' +
                                        '<div class="examination-title">' +
                                        'Tooth ' + exam.toothNumber + ' - ' + (exam.procedure ? exam.procedure.procedureName : 'No Procedure') +
                                        '</div>' +
                                        '<span class="payment-status status-' + status.toLowerCase() + '">' + getStatusDisplayName(status) + '</span>' +
                                        '</div>' +
                                        '<div class="examination-details">' +
                                        '<div class="detail-row">' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-calendar"></i> Date:</span>' +
                                        '<span class="detail-value">' + formatDate(exam.examinationDate) + '</span>' +
                                        '</div>' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-file-invoice-dollar"></i> Total:</span>' +
                                        '<span class="detail-value">₹' + (exam.totalProcedureAmount || 0) + '</span>' +
                                        '</div>' +
                                        '</div>' +
                                        '<div class="detail-row">' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-check-circle"></i> Paid:</span>' +
                                        '<span class="detail-value text-success">₹' + totalPaid + '</span>' +
                                        '</div>' +
                                        (totalRefunded > 0 ?
                                            '<div class="detail-item">' +
                                            '<span class="detail-label"><i class="fas fa-undo"></i> Refunded:</span>' +
                                            '<span class="detail-value text-danger">₹' + totalRefunded + '</span>' +
                                            '</div>' : '') +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-calculator"></i> Net:</span>' +
                                        '<span class="detail-value">₹' + netPaid + '</span>' +
                                        '</div>' +
                                        '</div>' +
                                        '<div class="detail-row">' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-clock"></i> Remaining:</span>' +
                                        '<span class="detail-value ' + (remaining > 0 ? 'text-warning' : 'text-success') + '">₹' + remaining + '</span>' +
                                        '</div>' +
                                        '<div class="detail-item">' +
                                        '<span class="detail-label"><i class="fas fa-receipt"></i> Transactions:</span>' +
                                        '<span class="detail-value">' + paymentCount + '</span>' +
                                        '</div>' +
                                        '</div>' +
                                        '</div>' +
                                        '<div class="payment-actions">' +
                                        actionButton +
                                        historyButton +
                                        '</div>' +
                                        '</div>';
                                }).join('');

                                // Add checkboxes if in select mode
                                if (isSelectMode) {
                                    addCheckboxesToCards();
                                }
                            }

                            // Event listeners for export modal
                            document.addEventListener('click', function (e) {
                                if (e.target.closest('.export-option')) {
                                    document.querySelectorAll('.export-option').forEach(option => {
                                        option.classList.remove('selected');
                                    });
                                    e.target.closest('.export-option').classList.add('selected');
                                }
                            });

                            // Initialize today's pending payments on page load
                            document.addEventListener('DOMContentLoaded', function () {
                                loadTodayPendingPayments();

                                // Add event delegation for collect payment buttons
                                document.addEventListener('click', function (e) {
                                    if (e.target.closest('.collect-payment-btn')) {
                                        const button = e.target.closest('.collect-payment-btn');
                                        const examinationId = button.getAttribute('data-examination-id');
                                        const remainingAmount = parseFloat(button.getAttribute('data-remaining-amount'));
                                        const patientFirstName = button.getAttribute('data-patient-firstname');
                                        const patientLastName = button.getAttribute('data-patient-lastname');
                                        const patientRegistration = button.getAttribute('data-patient-registration');
                                        const patientPhone = button.getAttribute('data-patient-phone');

                                        const patientInfo = {
                                            firstName: patientFirstName,
                                            lastName: patientLastName,
                                            registrationCode: patientRegistration,
                                            phoneNumber: patientPhone
                                        };

                                        showPaymentFormFromToday(examinationId, remainingAmount, patientInfo);
                                    }
                                });
                            });

                            // Update the original displayExaminations function to use the enhanced version
                            function displayExaminations(examinations) {
                                displayExaminationsEnhanced(examinations);
                                // Update patient summary when examinations are displayed
                                if (examinations.length > 0) {
                                    updatePatientSummary(examinations);
                                }
                            }
                        </script>
                    </body>

                    </html>
                    case 'COMPLETED': return 'Completed';
                    case 'NO_CHARGE': return 'No Charge';
                    default: return status;
                    }
                    }

                    function formatDate(dateString) {
                    if (!dateString) return 'N/A';
                    const date = new Date(dateString);
                    return date.toLocaleDateString('en-IN');
                    }

                    // Payment form functions
                    function showPaymentForm(examinationId, remainingAmount) {
                    currentExaminationId = examinationId;
                    document.getElementById('paymentSummary').innerHTML =
                    '<div class="summary-row">' +
                        '<span class="summary-label">Examination ID:</span>' +
                        '<span class="summary-value">' + examinationId + '</span>' +
                        '</div>' +
                    '<div class="summary-row">' +
                        '<span class="summary-label">Remaining Amount:</span>' +
                        '<span class="summary-value">₹' + remainingAmount + '</span>' +
                        '</div>';

                    document.getElementById('paymentForm').classList.add('show');
                    document.getElementById('overlay').classList.add('show');
                    }

                    function hidePaymentForm() {
                    document.getElementById('paymentForm').classList.remove('show');
                    document.getElementById('overlay').classList.remove('show');

                    // Reset form
                    document.querySelector('.payment-mode-select').value = '';
                    document.querySelector('.payment-amount-input').value = '';
                    document.querySelector('.payment-notes').value = '';
                    }

                    function collectPayment() {
                    const form = document.getElementById('paymentForm');
                    const paymentMode = form.querySelector('select[name="paymentMode"]').value;
                    const amountInput = form.querySelector('input[name="paymentAmount"]');
                    const amount = parseFloat(amountInput.value);
                    const notes = form.querySelector('textarea[name="paymentNotes"]').value;

                    // Validate payment mode
                    if (!paymentMode) {
                    alert('Please select a payment mode.');
                    return;
                    }

                    // Validate payment amount
                    if (!amount || amount <= 0) { alert('Please enter a valid payment amount.'); amountInput.focus();
                        return; } const requestData={ examinationId: currentExaminationId, paymentMode: paymentMode,
                        notes: notes, paymentDetails: { amount: amount } };
                        fetch('${pageContext.request.contextPath}/payments/collect', { method: 'POST' , headers:
                        { 'Content-Type' : 'application/json' , 'X-CSRF-TOKEN' :
                        document.querySelector("meta[name='_csrf' ]").content }, body: JSON.stringify(requestData) })
                        .then(response=> response.json())
                        .then(data => {
                        if (data.success) {
                        alert('Payment collected successfully!');
                        hidePaymentForm();

                        // Refresh the patient data if we have currentPatient (from search)
                        if (currentPatient && currentPatient.registrationCode) {
                        searchPatient(currentPatient.registrationCode);
                        }

                        // Refresh today's pending payments
                        loadTodayPendingPayments();
                        } else {
                        alert('Error: ' + data.message);
                        }
                        })
                        .catch(error => {
                        console.error('Error:', error);
                        alert('Error collecting payment');
                        });
                        }

                        // Payment History Functions
                        function viewPaymentHistory(examinationId) {
                        console.log('Loading payment history for examination:', examinationId);

                        // Show the modal first
                        document.getElementById('paymentHistoryModal').classList.add('show');
                        document.getElementById('overlay').classList.add('show');

                        // Load payment history data
                        fetch('${pageContext.request.contextPath}/payments/payment-history/' + examinationId)
                        .then(response => response.json())
                        .then(data => {
                        console.log('Payment history response:', data);
                        if (data.success) {
                        displayPaymentHistory(data);
                        } else {
                        alert('Error: ' + data.message);
                        hidePaymentHistory();
                        }
                        })
                        .catch(error => {
                        console.error('Error:', error);
                        alert('Error loading payment history');
                        hidePaymentHistory();
                        });
                        }

                        function displayPaymentHistory(data) {
                        const examination = data.examination;
                        const payments = data.payments;
                        const summary = data.summary;

                        // Update examination summary
                        document.getElementById('examinationDate').textContent =
                        formatDate(examination.examinationDate);
                        document.getElementById('clinicName').textContent = examination.clinic ?
                        examination.clinic.clinicName : 'N/A';
                        document.getElementById('toothNumber').textContent = examination.toothNumber || 'N/A';
                        document.getElementById('procedureName').textContent = examination.procedure ?
                        examination.procedure.procedureName : 'No Procedure';

                        // Update payment overview
                        document.getElementById('totalAmount').textContent = '₹' + (examination.totalProcedureAmount ||
                        0);
                        document.getElementById('paidAmount').textContent = '₹' + summary.totalPaid;
                        document.getElementById('remainingAmount').textContent = '₹' + summary.remaining;

                        // Update progress bar and status
                        const progressPercentage = examination.totalProcedureAmount > 0 ?
                        Math.round((summary.totalPaid / examination.totalProcedureAmount) * 100) : 0;
                        document.getElementById('paymentProgress').style.width = progressPercentage + '%';
                        document.getElementById('progressPercentage').textContent = progressPercentage + '%';

                        // Update progress status
                        let statusText = '';
                        let statusColor = '';
                        if (progressPercentage === 0) {
                        statusText = 'No payments made yet';
                        statusColor = '#e74c3c';
                        } else if (progressPercentage === 100) {
                        statusText = 'Payment completed';
                        statusColor = '#27ae60';
                        } else if (progressPercentage >= 50) {
                        statusText = 'Payment partially completed';
                        statusColor = '#f39c12';
                        } else {
                        statusText = 'Payment in progress';
                        statusColor = '#3498db';
                        }

                        const progressStatus = document.getElementById('progressStatus');
                        progressStatus.textContent = statusText;
                        progressStatus.style.color = statusColor;

                        // Update payment count
                        document.getElementById('paymentCount').textContent = payments.length;

                        // Update payment history table
                        const tableBody = document.querySelector('#paymentHistoryTable tbody');
                        const noPayments = document.getElementById('noPayments');

                        if (payments.length === 0) {
                        tableBody.innerHTML = '';
                        noPayments.style.display = 'block';
                        } else {
                        noPayments.style.display = 'none';
                        tableBody.innerHTML = payments.map(payment => {
                        const paymentModeClass = 'payment-mode-' + payment.paymentMode.toLowerCase().replace('_', '-');
                        const transactionTypeClass = 'transaction-type-' + (payment.transactionType ||
                        'CAPTURE').toLowerCase();
                        const paymentDate = formatDate(payment.paymentDate);
                        const paymentAmount = '₹' + payment.amount;
                        const paymentNotes = payment.notes || '-';
                        const transactionType = payment.transactionType || 'CAPTURE';

                        return '<tr>' +
                            '<td>' + paymentDate + '</td>' +
                            '<td><span class="transaction-type-badge ' + transactionTypeClass + '">' + transactionType +
                                    '</span></td>' +
                            '<td><span class="payment-mode-badge ' + paymentModeClass + '">' + payment.paymentMode +
                                    '</span></td>' +
                            '<td><strong>' + paymentAmount + '</strong></td>' +
                            '<td>' + paymentNotes + '</td>' +
                            '</tr>';
                        }).join('');
                        }
                        }

                        function hidePaymentHistory() {
                        document.getElementById('paymentHistoryModal').classList.remove('show');
                        document.getElementById('overlay').classList.remove('show');
                        }

                        // Today's Pending Payments Functions
                        function loadTodayPendingPayments() {
                        fetch('${pageContext.request.contextPath}/payments/today-pending')
                        .then(response => response.json())
                        .then(data => {
                        if (data.success) {
                        const examinations = data.examinations || [];
                        const tbody = document.querySelector('#todayPendingTable tbody');
                        tbody.innerHTML = '';

                        if (examinations.length === 0) {
                        tbody.innerHTML = '<tr>
                            <td colspan="9" class="text-center">No pending payments for today</td>
                        </tr>';
                        } else {
                        examinations.forEach(function(exam) {
                        const row = '<tr>' +
                            '<td><a href="${pageContext.request.contextPath}/patients/examination/' + exam.id + '"
                                    class="examination-id-link"><span class="examination-id">' + exam.id + '</span></a>
                            </td>' +
                            '<td>' + (exam.patient ? exam.patient.registrationCode : 'N/A') + '</td>' +
                            '<td>' + (exam.patient ? exam.patient.firstName + ' ' + exam.patient.lastName : 'N/A') + '
                            </td>' +
                            '<td>' + (exam.patient ? exam.patient.phoneNumber : 'N/A') + '</td>' +
                            '<td>' + (exam.procedure ? exam.procedure.procedureName : 'N/A') + '</td>' +
                            '<td>₹' + (exam.totalProcedureAmount || 0) + '</td>' +
                            '<td>₹' + (exam.totalPaidAmount || 0) + '</td>' +
                            '<td>₹' + (exam.remainingAmount || 0) + '</td>' +
                            '<td>' +
                                '<button class="btn btn-success collect-payment-btn" ' +
                                                            '
                                    onclick="showPaymentForm(' + exam.id + ', ' + exam.remainingAmount + ')">' +
                                    '<i class="fas fa-money-bill-wave"></i>' +
                                    'Collect Payment' +
                                    '</button>' +
                                '</td>' +
                            '</tr>';
                        tbody.innerHTML += row;
                        });
                        }
                        } else {
                        document.querySelector('#todayPendingTable tbody').innerHTML = '<tr>
                            <td colspan="9" class="text-center text-danger">Error loading data</td>
                        </tr>';
                        }
                        })
                        .catch(error => {
                        document.querySelector('#todayPendingTable tbody').innerHTML = '<tr>
                            <td colspan="9" class="text-center text-danger">Error loading data</td>
                        </tr>';
                        });
                        }

                        // Event listeners for export modal
                        document.addEventListener('click', function(e) {
                        if (e.target.closest('.export-option')) {
                        document.querySelectorAll('.export-option').forEach(option => {
                        option.classList.remove('selected');
                        });
                        e.target.closest('.export-option').classList.add('selected');
                        }
                        });

                        // Close modal when clicking overlay
                        document.getElementById('overlay').addEventListener('click', function() {
                        hidePaymentForm();
                        hidePaymentHistory();
                        hideExportModal();
                        });

                        // Close payment history modal when clicking outside
                        document.addEventListener('click', function(e) {
                        if (e.target.id === 'paymentHistoryModal') {
                        hidePaymentHistory();
                        }
                        });

                        // Close payment history modal with ESC key
                        document.addEventListener('keydown', function(e) {
                        if (e.key === 'Escape') {
                        hidePaymentHistory();
                        hidePaymentForm();
                        hideExportModal();
                        }
                        });

                        // Initialize today's pending payments on page load
                        document.addEventListener('DOMContentLoaded', function() {
                        loadTodayPendingPayments();
                        });
                        </script>
                        </body>

                        </html>